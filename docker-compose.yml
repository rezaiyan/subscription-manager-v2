version: '3.8'

services:
  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # Main application database
  postgres-main:
    image: postgres:15
    environment:
      POSTGRES_DB: subscription_main_db
      POSTGRES_USER: ali.rezaiyan
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data

  # Create subscription service database
  postgres-create:
    image: postgres:15
    environment:
      POSTGRES_DB: subscription_create_db
      POSTGRES_USER: ali.rezaiyan
      POSTGRES_PASSWORD: password123
    ports:
      - "5433:5432"
    volumes:
      - postgres_create_data:/var/lib/postgresql/data

  eureka-server:
    build:
      context: .
      dockerfile: server/eureka-server/Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - postgres-main
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-main:5432/subscription_main_db
      SPRING_DATASOURCE_USERNAME: ali.rezaiyan
      SPRING_DATASOURCE_PASSWORD: password123
      SPRING_CLOUD_CONFIG_URI: http://config-server:8889 

  create-subscription-service:
    build:
      context: .
      dockerfile: server/create-subscription-service/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - postgres-create
      - eureka-server
      - config-server
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-create:5432/subscription_create_db
      SPRING_DATASOURCE_USERNAME: ali.rezaiyan
      SPRING_DATASOURCE_PASSWORD: password123 
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://host.docker.internal:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8889
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  config-server:
    build:
      context: .
      dockerfile: server/config-server/Dockerfile
    ports:
      - "8889:8888"
    depends_on:
      - postgres-main
    environment:
      SPRING_PROFILES_ACTIVE: native

  api-gateway:
    build:
      context: .
      dockerfile: server/api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - subscription-manager
      - create-subscription-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://host.docker.internal:8761/eureka/

  subscription-manager:
    build:
      context: .
      dockerfile: server/main-service/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres-create
      - eureka-server
      - create-subscription-service
      - config-server
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-create:5432/subscription_create_db
      SPRING_DATASOURCE_USERNAME: ali.rezaiyan
      SPRING_DATASOURCE_PASSWORD: password123
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://host.docker.internal:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8889
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  website:
    build:
      context: ./composeApp
      dockerfile: Dockerfile
    ports:
      - "8081:3002"
    depends_on:
      - api-gateway
    environment:
      - API_BASE_URL=http://api-gateway:8080



volumes:
  postgres_main_data:
  postgres_create_data: 