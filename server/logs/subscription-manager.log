2025-07-03 19:31:38.468 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 55027 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 19:31:38.469 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 19:31:38.469 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 19:31:38.830 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 19:31:38.894 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2025-07-03 19:31:38.985 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 19:31:39.104 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 19:31:39.106 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 19:31:39.202 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 19:31:39.206 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 19:31:39.207 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 19:31:39.207 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 19:31:39.229 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 19:31:39.229 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 741 ms
2025-07-03 19:31:39.302 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 19:31:39.347 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 19:31:39.366 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 19:31:39.378 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 19:31:39.458 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 19:31:39.467 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 19:31:39.507 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@116915f1
2025-07-03 19:31:39.507 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 19:31:39.528 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 19:31:39.800 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 19:31:39.832 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:31:40.048 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 19:31:40.228 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 19:31:40.236 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 19:31:40.272 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 19:31:40.310 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 19:31:40.352 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 19:31:40.371 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 19:31:40.386 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 19:31:40.533 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 19:31:40.558 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 19:31:40.561 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 19:31:40.600 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 19:31:40.634 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 19:31:40.635 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 19:31:40.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:31:40.708 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:31:40.740 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:31:40.758 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:31:40.759 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:31:40.766 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:31:40.767 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 19:31:40.767 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 19:31:40.769 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751563900769 with initial instances count: 0
2025-07-03 19:31:40.771 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 19:31:40.772 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751563900772, current=UP, previous=STARTING]
2025-07-03 19:31:40.772 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:31:40.772 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 19:31:40.773 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:31:40.774 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:31:40.780 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 19:31:40.780 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 19:31:40.781 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7ec00f98] as "application/json"
2025-07-03 19:31:40.788 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 19:31:40.788 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 19:31:40.799 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 19:31:40.802 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 19:31:40.835 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 19:31:40.835 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 19:31:40.835 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751563900834
2025-07-03 19:31:40.835 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 19:31:40.836 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 19:31:40.839 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:31:40.845 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.577 seconds (process running for 2.778)
2025-07-03 19:31:40.848 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 19:31:40.876 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:31:40.880 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 19:31:40.880 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 19:31:40.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: _Zf3511OR_eppr3ixU9qlQ
2025-07-03 19:31:40.951 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:31:40.951 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:31:40.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-832c9beb-0ec0-41e6-98e5-e21b3e51fe69
2025-07-03 19:31:40.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 19:31:40.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:31:40.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-subscription-manager-group-1-832c9beb-0ec0-41e6-98e5-e21b3e51fe69', protocol='range'}
2025-07-03 19:31:40.965 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 3: {consumer-subscription-manager-group-1-832c9beb-0ec0-41e6-98e5-e21b3e51fe69=Assignment(partitions=[subscription-created-0])}
2025-07-03 19:31:40.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-subscription-manager-group-1-832c9beb-0ec0-41e6-98e5-e21b3e51fe69', protocol='range'}
2025-07-03 19:31:40.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 19:31:40.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 19:31:40.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 19:31:40.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 19:31:40.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 19:31:41.278 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@67964236
2025-07-03 19:31:41.279 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@18ab9b9e
2025-07-03 19:31:41.280 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 19:31:41.280 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 19:31:41.284 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:31:41.286 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:31:41.295 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:31:41.296 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:31:41.297 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:31:41.299 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:31:41.299 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:31:41.305 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:31:41.307 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:31:41.307 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:31:41.308 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:31:41.308 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:31:41.309 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:31:41.309 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:31:41.309 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:31:41.310 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:31:41.321 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:31:41.322 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:31:41.328 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:31:41.332 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:31:41.333 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:31:41.333 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:31:41.335 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:31:41.336 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:31:41.336 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:31:41.337 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:31:41.337 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:31:41.338 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:31:41.338 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:31:41.338 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:31:45.840 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:31:45.841 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:31:49.938 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/subscriptions", parameters={}
2025-07-03 19:31:49.938 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#createSubscription(Subscription)
2025-07-03 19:31:49.944 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Subscription(id=0, name=Test Netflix, description=Streaming service, amount=15.99, frequency=MONTHLY (truncated)...]
2025-07-03 19:31:49.948 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Delegating to create subscription service: Test Netflix, amount: 15.99
2025-07-03 19:31:49.948 [http-nio-3000-exec-5] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Attempting to create subscription: Test Netflix
2025-07-03 19:31:49.949 [http-nio-3000-exec-5] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Found 0 instances of create-subscription-service
2025-07-03 19:31:49.949 [http-nio-3000-exec-5] ERROR c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - No instances of create-subscription-service available
2025-07-03 19:31:49.949 [http-nio-3000-exec-5] ERROR c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Error creating subscription: Create subscription service not available
java.lang.RuntimeException: Create subscription service not available
	at com.github.rezaiyan.subscriptionmanager.CreateSubscriptionServiceClient.createSubscription(CreateSubscriptionServiceClient.kt:29)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionController.createSubscription(SubscriptionController.kt:67)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
	at kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	at kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	at org.springframework.web.method.support.InvocableHandlerMethod$KotlinDelegate.invokeFunction(InvocableHandlerMethod.java:334)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:252)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:31:49.949 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Create subscription service response: 503 SERVICE_UNAVAILABLE
2025-07-03 19:31:49.951 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-03 19:31:49.951 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-03 19:31:49.951 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-07-03 19:31:50.842 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:31:50.843 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:31:54.784 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:31:54.784 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:31:54.784 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:31:54.786 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:31:54.786 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:31:54.787 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-03 19:31:54.787 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:31:54.787 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:31:55.844 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:31:55.844 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:00.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:00.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:05.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:05.850 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:10.774 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:32:10.774 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:32:10.774 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:32:10.774 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:32:10.774 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:32:10.775 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-07-03 19:32:10.775 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:32:10.777 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:32:10.780 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:32:10.781 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:32:10.790 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:32:10.790 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:32:10.796 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:32:10.800 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:32:10.800 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:32:10.854 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:10.855 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:15.856 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:15.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:20.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:20.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:25.860 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:25.861 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:30.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:30.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:35.865 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:35.866 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:40.807 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:32:40.807 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:32:40.808 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:32:40.809 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:32:40.820 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:32:40.822 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:32:40.823 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:32:40.868 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:40.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:45.836 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:45.837 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:45.839 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:45.850 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:45.852 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:45.853 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:45.853 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:45.854 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:45.856 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:45.856 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:45.857 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:45.858 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:45.858 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:45.858 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:45.859 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:45.860 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:45.860 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:45.860 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:45.861 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:45.865 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:45.867 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:45.867 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:45.868 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:45.869 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:45.869 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:45.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:45.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:45.870 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:45.872 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:45.872 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:45.873 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:45.873 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:48.250 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:48.251 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:48.252 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:48.256 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:48.257 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:48.258 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:48.258 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:48.259 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:48.260 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:48.261 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:48.261 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:48.262 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:48.265 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:48.265 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:48.265 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:48.266 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:48.269 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:48.269 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:48.270 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:48.271 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:48.272 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:48.272 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:48.273 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:48.275 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:48.275 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:48.276 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:48.278 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:48.279 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:48.279 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:48.279 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:50.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:50.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:32:54.848 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:54.849 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:54.850 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:54.852 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:54.853 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:54.853 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:54.853 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:54.854 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:54.854 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:32:54.855 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:32:54.855 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:32:54.855 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:32:54.856 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:32:54.856 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:54.856 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:32:54.856 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:54.858 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:54.858 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:54.859 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:54.860 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:54.860 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:54.861 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:54.861 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:54.863 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:32:54.863 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:32:54.864 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:54.865 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:32:54.865 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:32:54.865 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:32:54.865 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:32:55.874 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:32:55.874 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:00.876 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:00.877 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:05.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:05.879 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:10.573 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/subscriptions", parameters={}
2025-07-03 19:33:10.574 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#createSubscription(Subscription)
2025-07-03 19:33:10.579 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Subscription(id=0, name=Test Netflix, description=Streaming service, amount=15.99, frequency=MONTHLY (truncated)...]
2025-07-03 19:33:10.581 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Delegating to create subscription service: Test Netflix, amount: 15.99
2025-07-03 19:33:10.581 [http-nio-3000-exec-6] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Attempting to create subscription: Test Netflix
2025-07-03 19:33:10.583 [http-nio-3000-exec-6] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Found 1 instances of create-subscription-service
2025-07-03 19:33:10.583 [http-nio-3000-exec-6] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Calling URL: http://192.168.178.100:3001/api/subscriptions
2025-07-03 19:33:10.589 [http-nio-3000-exec-6] DEBUG o.s.web.client.RestTemplate - HTTP POST http://192.168.178.100:3001/api/subscriptions
2025-07-03 19:33:10.591 [http-nio-3000-exec-6] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:33:10.592 [http-nio-3000-exec-6] DEBUG o.s.web.client.RestTemplate - Writing [Subscription(id=0, name=Test Netflix, description=Streaming service, amount=15.99, frequency=MONTHLY, startDate=null, nextBillingDate=null, active=false, createdAt=null)] as "application/json"
2025-07-03 19:33:10.679 [http-nio-3000-exec-6] DEBUG o.s.web.client.RestTemplate - Response 503 SERVICE_UNAVAILABLE
2025-07-03 19:33:10.680 [http-nio-3000-exec-6] ERROR c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Error creating subscription: 503 : [no body]
org.springframework.web.client.HttpServerErrorException$ServiceUnavailable: 503 : [no body]
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:111)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.github.rezaiyan.subscriptionmanager.CreateSubscriptionServiceClient.createSubscription(CreateSubscriptionServiceClient.kt:44)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionController.createSubscription(SubscriptionController.kt:67)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
	at kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	at kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	at org.springframework.web.method.support.InvocableHandlerMethod$KotlinDelegate.invokeFunction(InvocableHandlerMethod.java:334)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:252)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:33:10.681 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Create subscription service response: 503 SERVICE_UNAVAILABLE
2025-07-03 19:33:10.681 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-03 19:33:10.681 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-03 19:33:10.681 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-07-03 19:33:10.826 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:33:10.826 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:33:10.826 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:33:10.827 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:33:10.829 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:33:10.830 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:33:10.830 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:33:10.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:10.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:15.882 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:15.882 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:20.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:20.885 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:25.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:25.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:30.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:30.889 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:35.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:35.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:40.833 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:33:40.833 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:33:40.833 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:33:40.833 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:33:40.843 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:33:40.843 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:33:40.843 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:33:40.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:40.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:45.893 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:45.894 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:50.895 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:50.896 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:33:55.897 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:33:55.898 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:00.899 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:00.900 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:05.901 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:05.902 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:10.851 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:34:10.851 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:34:10.853 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:34:10.853 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:34:10.864 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:34:10.864 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:34:10.865 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:34:10.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:10.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:15.905 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:15.906 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:20.907 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:20.907 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:25.908 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:25.908 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:30.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:30.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:35.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:35.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:40.867 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:34:40.868 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:34:40.871 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:34:40.871 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:34:40.874 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:34:40.877 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:34:40.877 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:34:40.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:40.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:45.914 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:45.914 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:46.641 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:46.643 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:46.646 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:46.653 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:46.657 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:46.658 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:46.659 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:46.661 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:46.662 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:46.663 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:46.664 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:46.666 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:46.666 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:46.666 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:46.669 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:46.670 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:46.670 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:46.671 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:46.671 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:46.671 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:46.672 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:46.672 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:46.672 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:46.674 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:46.674 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:46.674 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:46.675 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:46.675 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:46.675 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:46.676 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:50.915 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:50.915 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:52.517 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:52.518 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:52.519 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:52.521 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:52.522 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:52.522 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:52.522 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:52.523 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:52.524 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:52.524 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:52.524 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:52.526 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:52.527 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:52.527 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:52.528 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:52.528 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:52.532 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:52.532 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:52.534 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:52.535 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:52.536 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:52.536 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:52.537 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:52.538 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:52.538 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:52.540 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:52.542 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:52.543 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:52.543 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:52.543 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:55.915 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:34:55.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:34:58.887 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:58.887 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:58.888 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:58.890 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:58.892 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:58.892 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:58.892 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:58.894 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:58.894 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:34:58.895 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:34:58.896 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:34:58.897 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:34:58.899 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:34:58.899 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:58.899 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:34:58.900 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:58.904 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:58.905 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:58.906 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:58.907 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:58.909 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:58.909 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:58.910 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:34:58.910 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:34:58.911 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:34:58.912 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:58.913 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:34:58.914 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:34:58.914 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:34:58.915 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:00.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:00.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:02.117 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:02.118 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:02.119 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:02.121 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:02.123 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:02.123 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:02.123 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:02.124 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:02.127 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:02.127 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:02.128 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:02.132 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:02.135 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:02.136 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:02.136 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:02.137 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:02.154 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:02.155 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:02.156 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:02.158 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:02.160 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:02.160 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:02.161 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:02.162 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:02.163 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:02.164 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:02.165 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:02.167 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:02.168 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:02.168 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:05.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:05.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:10.425 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:10.426 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:10.427 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:10.428 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:10.429 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:10.430 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:10.430 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:10.430 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:10.431 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:10.431 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:10.431 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:10.432 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:10.434 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:10.434 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:10.434 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:10.434 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:10.436 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:10.436 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:10.437 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:10.438 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:10.439 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:10.439 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:10.439 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:10.440 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:10.440 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:10.441 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:10.441 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:10.442 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:10.442 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:10.442 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:10.879 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:35:10.879 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:35:10.880 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:35:10.880 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:35:10.885 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:35:10.885 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:35:10.886 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:35:10.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:10.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:11.588 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:11.589 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:11.589 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:11.592 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:11.594 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:11.595 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:11.595 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:11.596 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:11.600 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:35:11.601 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:35:11.602 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:35:11.605 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:35:11.607 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:35:11.608 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:11.608 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:35:11.611 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:11.620 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:11.621 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:11.623 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:11.629 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:11.631 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:11.631 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:11.632 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:11.640 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:35:11.641 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:35:11.642 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:11.644 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:35:11.645 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:35:11.645 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:35:11.646 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:35:15.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:15.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:20.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:20.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:25.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:25.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:30.922 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:30.923 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:35.924 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:35.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:40.891 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:35:40.891 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:35:40.893 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:35:40.893 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:35:40.911 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:35:40.911 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:35:40.912 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:35:40.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:40.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:45.926 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:45.926 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:50.927 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:50.928 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:35:55.929 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:35:55.930 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:00.931 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:00.932 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:05.934 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:05.935 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:10.917 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:36:10.917 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:36:10.918 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:36:10.918 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:36:10.937 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:10.937 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:10.941 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:36:10.941 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:36:10.942 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:36:15.939 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:15.941 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:20.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:20.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:25.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:25.946 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:30.947 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:30.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:35.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:35.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:40.653 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:36:40.948 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:36:40.948 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:36:40.949 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:36:40.949 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:36:40.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:40.951 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:40.968 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:36:40.968 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:36:40.969 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:36:45.953 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:45.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:50.955 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:50.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:36:52.107 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:36:52.109 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:36:52.111 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:36:52.119 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:36:52.122 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:36:52.123 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:36:52.123 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:36:52.126 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:36:52.129 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:36:52.129 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:36:52.130 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:36:52.132 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:36:52.133 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:36:52.134 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:36:52.134 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:36:52.134 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:36:52.142 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:36:52.142 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:36:52.144 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:36:52.145 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:36:52.146 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:36:52.147 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:36:52.147 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:36:52.148 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:36:52.148 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:36:52.149 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:36:52.150 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:36:52.151 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:36:52.151 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:36:52.151 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:36:55.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:36:55.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:00.272 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:00.272 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:00.273 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:00.275 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:00.276 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:00.277 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:00.277 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:00.278 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:00.281 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:00.281 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:00.282 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:00.286 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:00.289 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:00.289 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:00.290 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:00.290 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:00.295 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:00.296 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:00.297 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:00.299 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:00.300 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:00.300 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:00.300 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:00.302 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:00.302 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:00.302 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:00.303 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:00.304 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:00.304 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:00.305 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:00.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:00.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:03.278 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:03.283 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:03.288 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:03.298 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:03.300 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:03.304 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:03.305 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:03.306 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:03.308 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:03.309 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:03.309 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:03.312 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:03.315 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:03.315 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:03.316 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:03.317 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:03.322 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:03.323 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:03.324 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:03.327 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:03.328 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:03.328 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:03.329 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:03.330 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:03.331 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:03.332 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:03.334 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:03.336 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:03.336 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:03.337 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:05.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:05.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:10.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:10.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:10.977 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:37:10.977 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:37:10.980 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:37:10.981 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:37:11.004 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:37:11.004 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:37:11.005 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:37:14.568 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:14.569 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:14.571 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:14.575 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:14.578 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:14.578 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:14.579 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:14.579 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:14.580 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:14.583 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:14.584 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:14.587 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:14.590 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:14.590 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:14.590 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:14.590 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:14.598 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:14.598 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:14.600 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:14.601 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:14.603 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:14.603 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:14.603 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:14.605 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:14.605 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:14.605 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:14.606 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:14.606 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:14.607 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:14.607 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:15.045 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:15.045 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:15.045 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:15.046 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:15.046 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:15.046 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:15.046 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:15.047 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:15.048 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:15.048 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:15.048 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:15.048 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:15.049 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 0 subscriptions
2025-07-03 19:37:15.049 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:15.049 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-03 19:37:15.049 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:15.051 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:15.052 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:15.052 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:15.053 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:15.053 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:15.053 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:15.053 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:15.055 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:15.055 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:15.055 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:15.056 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:15.056 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:15.056 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:15.056 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:15.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:15.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:20.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:20.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:25.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:25.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:30.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:30.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:35.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:35.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:41.011 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:37:41.011 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:37:41.012 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:37:41.012 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:37:41.018 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:37:41.018 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:37:41.019 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:37:44.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 1 records
2025-07-03 19:37:44.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.a.RecordMessagingMessageListenerAdapter - Processing [GenericMessage [payload=SubscriptionCreatedEvent(subscriptionId=29, name=Test Netflix, description=Streaming service for testing, amount=15.99, frequency=MONTHLY, startDate=2025-07-03T17:37:43.733197Z, active=false, createdAt=2025-07-03T17:37:43.733198Z, eventTimestamp=2025-07-03T17:37:43.733199Z), headers={kafka_offset=0, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@19a0d259, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=29, kafka_receivedTopic=subscription-created, kafka_receivedTimestamp=1751564263884, kafka_groupId=subscription-manager-group}]]
2025-07-03 19:37:44.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.g.r.s.KafkaEventListener - Received subscription created event: SubscriptionCreatedEvent(subscriptionId=29, name=Test Netflix, description=Streaming service for testing, amount=15.99, frequency=MONTHLY, startDate=2025-07-03T17:37:43.733197Z, active=false, createdAt=2025-07-03T17:37:43.733198Z, eventTimestamp=2025-07-03T17:37:43.733199Z)
2025-07-03 19:37:44.084 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0 
    where
        s1_0.id=?
2025-07-03 19:37:44.092 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        subscription
        (active, amount, created_at, description, frequency, name, next_billing_date, start_date) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 19:37:44.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.g.r.s.KafkaEventListener - Successfully synced subscription 29 to local database
2025-07-03 19:37:44.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {subscription-created-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
2025-07-03 19:37:44.107 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Committing: {subscription-created-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
2025-07-03 19:37:49.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:49.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:54.119 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:54.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:37:58.056 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:58.058 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:58.058 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:58.061 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:58.070 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 1 subscriptions
2025-07-03 19:37:58.071 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:58.071 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:37:58.072 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:58.074 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:37:58.074 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:37:58.075 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:37:58.076 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:58.076 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:58.077 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:37:58.078 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:58.079 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 1 subscriptions
2025-07-03 19:37:58.080 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:58.080 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:37:58.080 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:58.080 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:58.082 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:58.082 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:58.082 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:58.083 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:37:58.084 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:37:58.085 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:58.086 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:37:58.087 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:37:58.087 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:37:58.087 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:37:59.121 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:37:59.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:04.017 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:38:04.019 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:38:04.022 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:38:04.030 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:38:04.034 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 1 subscriptions
2025-07-03 19:38:04.035 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:04.036 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:38:04.038 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:04.039 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:38:04.040 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:38:04.040 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:38:04.042 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:38:04.042 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:38:04.043 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:38:04.044 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:04.047 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 1 subscriptions
2025-07-03 19:38:04.047 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:04.047 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:38:04.048 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:04.048 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:04.049 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:04.049 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:38:04.049 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:04.050 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:38:04.050 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:38:04.051 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:04.052 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:04.052 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:04.052 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:38:04.052 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:04.123 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:04.123 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:09.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:09.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:11.022 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:38:11.023 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:11.024 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:38:11.024 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:11.049 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:38:11.049 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:38:11.050 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:38:14.125 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:14.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:15.135 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - OPTIONS "/api/subscriptions", parameters={}
2025-07-03 19:38:15.135 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#createSubscription(Subscription)
2025-07-03 19:38:15.137 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:15.143 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/subscriptions", parameters={}
2025-07-03 19:38:15.144 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#createSubscription(Subscription)
2025-07-03 19:38:15.148 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Subscription(id=0, name=Test from web, description=, amount=22.0, frequency=MONTHLY, startDate=2025- (truncated)...]
2025-07-03 19:38:15.149 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Delegating to create subscription service: Test from web, amount: 22.0
2025-07-03 19:38:15.149 [http-nio-3000-exec-2] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Attempting to create subscription: Test from web
2025-07-03 19:38:15.149 [http-nio-3000-exec-2] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Found 1 instances of create-subscription-service
2025-07-03 19:38:15.149 [http-nio-3000-exec-2] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Calling URL: http://192.168.178.100:3001/api/subscriptions
2025-07-03 19:38:15.149 [http-nio-3000-exec-2] DEBUG o.s.web.client.RestTemplate - HTTP POST http://192.168.178.100:3001/api/subscriptions
2025-07-03 19:38:15.150 [http-nio-3000-exec-2] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:15.150 [http-nio-3000-exec-2] DEBUG o.s.web.client.RestTemplate - Writing [Subscription(id=0, name=Test from web, description=, amount=22.0, frequency=MONTHLY, startDate=2025-07-03T17:38:15.127Z, nextBillingDate=null, active=false, createdAt=null)] as "application/json"
2025-07-03 19:38:15.196 [http-nio-3000-exec-2] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:38:15.196 [http-nio-3000-exec-2] DEBUG o.s.web.client.RestTemplate - Reading to [com.github.rezaiyan.subscriptionmanager.Subscription]
2025-07-03 19:38:15.197 [http-nio-3000-exec-2] INFO  c.g.r.s.CreateSubscriptionServiceClient - CreateSubscriptionServiceClient - Response status: 200 OK
2025-07-03 19:38:15.197 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - POST /api/subscriptions - Create subscription service response: 200 OK
2025-07-03 19:38:15.198 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2025-07-03 19:38:15.198 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Subscription(id=30, name=Test from web, description=, amount=22.0, frequency=MONTHLY, startDate=2025 (truncated)...]
2025-07-03 19:38:15.199 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:15.206 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:38:15.206 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:38:15.206 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:15.207 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 1 records
2025-07-03 19:38:15.207 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:38:15.207 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.a.RecordMessagingMessageListenerAdapter - Processing [GenericMessage [payload=SubscriptionCreatedEvent(subscriptionId=30, name=Test from web, description=, amount=22.0, frequency=MONTHLY, startDate=2025-07-03T17:38:15.127Z, active=false, createdAt=2025-07-03T17:38:15.192829Z, eventTimestamp=2025-07-03T17:38:15.192834Z), headers={kafka_offset=1, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@19a0d259, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=30, kafka_receivedTopic=subscription-created, kafka_receivedTimestamp=1751564295193, kafka_groupId=subscription-manager-group}]]
2025-07-03 19:38:15.207 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.g.r.s.KafkaEventListener - Received subscription created event: SubscriptionCreatedEvent(subscriptionId=30, name=Test from web, description=, amount=22.0, frequency=MONTHLY, startDate=2025-07-03T17:38:15.127Z, active=false, createdAt=2025-07-03T17:38:15.192829Z, eventTimestamp=2025-07-03T17:38:15.192834Z)
2025-07-03 19:38:15.208 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:15.208 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:38:15.208 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:15.208 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0 
    where
        s1_0.id=?
2025-07-03 19:38:15.209 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        subscription
        (active, amount, created_at, description, frequency, name, next_billing_date, start_date) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 19:38:15.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.g.r.s.KafkaEventListener - Successfully synced subscription 30 to local database
2025-07-03 19:38:15.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {subscription-created-0=OffsetAndMetadata{offset=2, leaderEpoch=null, metadata=''}}
2025-07-03 19:38:15.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Committing: {subscription-created-0=OffsetAndMetadata{offset=2, leaderEpoch=null, metadata=''}}
2025-07-03 19:38:17.955 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - OPTIONS "/api/subscriptions/30/toggle", parameters={}
2025-07-03 19:38:17.958 [http-nio-3000-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-03 19:38:17.959 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:38:17.961 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/subscriptions/30/toggle", parameters={}
2025-07-03 19:38:17.961 [http-nio-3000-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-03 19:38:17.963 [http-nio-3000-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-03 19:38:17.966 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.github.rezaiyan.subscriptionmanager.GlobalExceptionHandler#handleException(Exception)
2025-07-03 19:38:17.976 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:17.977 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=NoResourceFoundException, message=No static resource api/subscriptions/30/toggle., stackTrace (truncated)...]
2025-07-03 19:38:17.979 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/subscriptions/30/toggle.]
2025-07-03 19:38:17.979 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-03 19:38:18.872 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/subscriptions/30/toggle", parameters={}
2025-07-03 19:38:18.873 [http-nio-3000-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-03 19:38:18.873 [http-nio-3000-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-03 19:38:18.874 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.github.rezaiyan.subscriptionmanager.GlobalExceptionHandler#handleException(Exception)
2025-07-03 19:38:18.875 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:18.875 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=NoResourceFoundException, message=No static resource api/subscriptions/30/toggle., stackTrace (truncated)...]
2025-07-03 19:38:18.876 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/subscriptions/30/toggle.]
2025-07-03 19:38:18.876 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-03 19:38:19.367 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/subscriptions/30/toggle", parameters={}
2025-07-03 19:38:19.367 [http-nio-3000-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-03 19:38:19.368 [http-nio-3000-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-03 19:38:19.368 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.github.rezaiyan.subscriptionmanager.GlobalExceptionHandler#handleException(Exception)
2025-07-03 19:38:19.369 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:38:19.369 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=NoResourceFoundException, message=No static resource api/subscriptions/30/toggle., stackTrace (truncated)...]
2025-07-03 19:38:19.370 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/subscriptions/30/toggle.]
2025-07-03 19:38:19.371 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-03 19:38:20.215 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:20.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:25.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:25.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:30.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:30.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:35.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:35.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:40.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:40.225 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:41.053 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751563900772
2025-07-03 19:38:41.053 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:38:41.054 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:41.055 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:41.065 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:38:41.065 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:38:41.066 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:38:45.226 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:38:45.227 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:46.098 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 19:38:46.099 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564326099, current=DOWN, previous=UP]
2025-07-03 19:38:46.099 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:38:46.099 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:38:46.100 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:46.100 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7ec00f98] as "application/json"
2025-07-03 19:38:46.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:46.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 19:38:46.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 19:38:46.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:38:46.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-832c9beb-0ec0-41e6-98e5-e21b3e51fe69 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 19:38:46.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 19:38:46.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 19:38:46.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 19:38:46.105 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 19:38:46.106 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 19:38:46.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 19:38:46.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 19:38:46.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 19:38:46.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 19:38:46.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 19:38:46.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 19:38:46.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 19:38:46.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 19:38:46.552 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 19:38:47.087 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:38:47.090 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 19:38:47.091 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 19:38:47.091 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 19:38:50.097 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 19:38:50.098 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 19:38:50.099 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:50.105 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:38:50.105 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:38:50.107 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 19:38:50.107 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:38:50.108 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:38:50.108 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:38:50.108 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:38:50.110 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 19:40:25.471 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 57086 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 19:40:25.472 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 19:40:25.473 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 19:40:25.853 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 19:40:25.915 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2025-07-03 19:40:26.000 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 19:40:26.133 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 19:40:26.136 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 19:40:26.241 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 19:40:26.245 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 19:40:26.245 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 19:40:26.245 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 19:40:26.269 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 19:40:26.269 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 776 ms
2025-07-03 19:40:26.345 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 19:40:26.390 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 19:40:26.409 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 19:40:26.420 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 19:40:26.494 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 19:40:26.504 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 19:40:26.544 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4742466e
2025-07-03 19:40:26.544 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 19:40:26.560 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 19:40:26.819 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 19:40:26.853 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:40:27.072 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 19:40:27.250 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 19:40:27.258 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", beanRef="__listener", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 19:40:27.294 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 19:40:27.333 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 19:40:27.380 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 19:40:27.397 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 19:40:27.414 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 19:40:27.635 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 19:40:27.662 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 19:40:27.666 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 19:40:27.708 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 19:40:27.743 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 19:40:27.744 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 19:40:27.753 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:40:27.822 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:40:27.857 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:40:27.877 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:40:27.878 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:40:27.886 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:40:27.886 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 19:40:27.887 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 19:40:27.888 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751564427888 with initial instances count: 0
2025-07-03 19:40:27.891 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 19:40:27.891 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564427891, current=UP, previous=STARTING]
2025-07-03 19:40:27.891 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:40:27.891 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 19:40:27.892 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:40:27.893 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:40:27.896 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 19:40:27.896 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 19:40:27.897 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4a9463b2] as "application/json"
2025-07-03 19:40:27.904 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 19:40:27.905 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 19:40:27.914 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 19:40:27.916 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 19:40:27.943 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 19:40:27.943 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 19:40:27.943 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751564427943
2025-07-03 19:40:27.944 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 19:40:27.944 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 19:40:27.947 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:27.955 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.619 seconds (process running for 2.83)
2025-07-03 19:40:27.958 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 19:40:27.991 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:40:27.998 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 19:40:27.999 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 19:40:28.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: nz14Al0ZTa6zympp1ryqVw
2025-07-03 19:40:28.373 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:40:28.376 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:40:28.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-36c126cd-9dba-4b21-832a-82cf65c5012d
2025-07-03 19:40:28.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 19:40:28.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:40:28.412 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-36c126cd-9dba-4b21-832a-82cf65c5012d', protocol='range'}
2025-07-03 19:40:28.415 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-36c126cd-9dba-4b21-832a-82cf65c5012d=Assignment(partitions=[subscription-created-0])}
2025-07-03 19:40:28.442 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-36c126cd-9dba-4b21-832a-82cf65c5012d', protocol='range'}
2025-07-03 19:40:28.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 19:40:28.445 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 19:40:28.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 19:40:28.464 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 19:40:28.465 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 19:40:32.951 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:32.951 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:34.816 [http-nio-3000-exec-6] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 19:40:34.817 [http-nio-3000-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 19:40:34.817 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 19:40:34.817 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 19:40:34.817 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 19:40:34.822 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6a82d4b4
2025-07-03 19:40:34.822 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@615c9e9b
2025-07-03 19:40:34.823 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 19:40:34.823 [http-nio-3000-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-07-03 19:40:34.832 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:40:34.835 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:40:34.852 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:40:34.862 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:40:34.866 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:40:34.869 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:34.871 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:40:34.881 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:34.885 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:40:34.885 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:40:34.885 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:40:34.886 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:40:34.886 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:40:34.886 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:40:34.887 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:40:34.887 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:34.888 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:40:34.888 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:34.909 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:34.912 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:34.914 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:34.914 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:40:34.915 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:34.915 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:40:34.916 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:40:34.916 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:34.917 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:34.918 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:34.918 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:40:34.919 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:37.953 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:37.955 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:39.203 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:40:39.204 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:40:39.204 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:40:39.205 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:40:39.206 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:40:39.206 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:39.206 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:40:39.207 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:39.208 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:40:39.208 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:40:39.208 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:40:39.209 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:40:39.209 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:40:39.210 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:39.210 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:40:39.210 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:39.222 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:40:39.222 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:40:39.223 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:39.224 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:39.224 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:39.224 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:40:39.225 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:39.225 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:40:39.226 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:40:39.226 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:39.227 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:40:39.227 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:40:39.227 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:40:39.227 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:40:42.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:42.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:47.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:47.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:52.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:52.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:40:57.894 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:40:57.894 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:40:57.894 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:40:57.894 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:40:57.895 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:40:57.895 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-07-03 19:40:57.895 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:40:57.897 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:40:57.898 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:40:57.898 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:40:57.906 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:40:57.910 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:40:57.910 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:40:57.914 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:40:57.917 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:40:57.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:40:57.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:02.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:02.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:07.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 2147483646 disconnected.
2025-07-03 19:41:07.452 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-07-03 19:41:07.453 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:41:07.453 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight FETCH request with correlation id 104 due to node 1 being disconnected (elapsed time since creation: 343ms, elapsed time since send: 343ms, request timeout: 30000ms)
2025-07-03 19:41:07.453 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight METADATA request with correlation id 107 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:41:07.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 19:41:07.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=192548192, epoch=76) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:41:07.555 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:41:07.555 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 108 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:41:07.655 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:41:07.655 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 109 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:41:07.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:41:07.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 110 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:41:07.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:07.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:12.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:12.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:15.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 114 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 19:41:15.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: qkvbzX4qQVqbJfpbRMP71w
2025-07-03 19:41:15.364 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting the last seen epoch of partition subscription-created-0 to 0 since the associated topicId changed from null to Q8JYG2cHT52xTRm6_qYs2w
2025-07-03 19:41:15.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:41:15.572 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.a.k.c.c.internals.AbstractFetch - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Received unknown topic ID error in fetch for partition subscription-created-0
2025-07-03 19:41:15.575 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Attempt to heartbeat with Generation{generationId=1, memberId='consumer-subscription-manager-group-1-36c126cd-9dba-4b21-832a-82cf65c5012d', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-07-03 19:41:15.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-07-03 19:41:15.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-07-03 19:41:15.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Giving away all assigned partitions as lost since generation/memberID has been reset,indicating that consumer is in old state or no longer part of the group
2025-07-03 19:41:15.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Lost previously assigned partitions subscription-created-0
2025-07-03 19:41:15.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions lost: [subscription-created-0]
2025-07-03 19:41:15.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 19:41:15.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:15.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:41:15.584 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-bcf86e85-c706-4015-b1f2-7646f12762b2
2025-07-03 19:41:15.584 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 19:41:15.584 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:41:15.592 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-bcf86e85-c706-4015-b1f2-7646f12762b2', protocol='range'}
2025-07-03 19:41:16.095 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-bcf86e85-c706-4015-b1f2-7646f12762b2=Assignment(partitions=[subscription-created-0])}
2025-07-03 19:41:16.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-bcf86e85-c706-4015-b1f2-7646f12762b2', protocol='range'}
2025-07-03 19:41:16.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 19:41:16.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 19:41:16.125 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 19:41:16.129 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 19:41:16.129 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 19:41:17.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:17.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:22.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:22.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:27.920 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:41:27.921 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:41:27.921 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:41:27.921 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:41:27.950 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:41:27.950 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:41:27.951 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:41:27.983 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:27.983 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:28.008 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:28.009 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:28.010 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:28.027 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:28.039 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:28.039 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:28.040 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:28.041 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:28.042 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:28.043 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:28.043 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:28.043 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:28.045 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:28.045 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:28.045 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:28.045 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:28.046 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:28.046 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:28.047 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:28.048 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:28.049 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:28.049 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:28.050 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:28.051 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:28.051 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:28.051 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:28.052 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:28.052 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:28.052 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:28.053 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:31.808 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:31.809 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:31.809 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:31.811 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:31.813 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:31.813 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:31.814 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:31.814 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:31.816 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:31.817 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:31.818 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:31.819 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:31.820 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:31.820 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:31.821 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:31.824 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:31.824 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:31.824 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:31.825 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:31.826 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:31.827 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:31.827 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:31.828 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:31.829 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:31.829 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:31.829 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:31.830 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:31.830 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:31.830 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:31.831 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:32.984 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:32.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:37.733 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:37.734 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:37.734 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:37.745 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:37.747 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:37.747 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:37.748 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:37.748 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:37.749 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:37.749 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:37.750 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:37.750 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:37.751 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:37.751 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:37.751 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:37.752 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:37.754 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:37.754 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:37.755 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:37.757 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:37.757 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:37.757 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:37.758 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:37.758 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:37.759 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:37.759 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:37.760 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:37.760 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:37.760 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:37.761 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:37.986 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:37.986 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:38.717 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:38.718 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:38.718 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:38.719 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:38.720 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:38.720 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:38.720 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:38.721 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:38.721 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:38.722 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:38.722 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:38.722 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:38.723 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:38.723 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:38.723 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:38.723 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:38.731 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:38.731 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:38.732 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:38.734 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:38.734 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:38.734 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:38.735 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:38.735 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:38.736 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:38.736 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:38.737 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:38.737 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:38.737 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:38.737 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:42.988 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:42.988 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:47.824 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:47.824 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:47.825 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:47.829 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:47.831 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:47.831 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:47.832 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:47.832 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:47.834 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:47.834 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:47.836 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:47.837 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:47.839 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:47.839 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:47.840 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:47.840 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:47.840 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:47.840 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:47.844 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:47.845 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:47.846 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:47.846 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:47.846 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:47.849 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:47.849 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:47.849 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:47.850 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:47.851 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:47.851 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:47.852 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:47.989 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:47.989 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:48.033 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:48.033 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:48.034 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:48.035 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:48.037 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:48.037 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:48.037 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:48.038 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:48.039 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:48.039 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:48.039 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:48.039 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:48.041 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:48.041 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:48.041 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:48.042 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:48.048 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:48.048 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:48.049 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:48.053 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:48.054 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:48.054 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:48.055 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:48.056 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:48.057 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:48.057 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:48.058 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:48.060 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:48.060 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:48.060 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:52.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:52.991 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:57.961 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:41:57.962 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:41:57.965 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:41:57.966 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:41:57.966 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:41:57.967 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:41:57.967 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:41:57.992 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:41:57.992 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:41:58.877 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:58.877 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:58.877 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:58.879 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:58.880 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:58.880 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:58.880 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:58.881 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:58.882 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:58.883 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:58.883 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:58.883 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:58.885 [http-nio-3000-exec-8] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:58.885 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:58.885 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:58.885 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:58.891 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:58.891 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:58.892 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:58.893 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:58.894 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:58.894 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:58.894 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:58.899 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:58.899 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:58.900 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:58.901 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:58.902 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:58.902 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:58.902 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:59.816 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:59.816 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:59.816 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:59.818 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:59.819 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:59.819 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:59.819 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:59.819 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:59.820 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:41:59.820 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:41:59.820 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:41:59.821 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:41:59.821 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:41:59.822 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:59.822 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:41:59.822 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:59.830 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:59.830 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:59.831 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:59.847 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:59.859 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:59.859 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:59.859 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:41:59.860 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:41:59.860 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:41:59.861 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:59.861 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:41:59.862 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:41:59.862 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:41:59.862 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:00.128 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 57431 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 19:42:00.131 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 19:42:00.132 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 19:42:00.508 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 19:42:00.565 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interface.
2025-07-03 19:42:00.660 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 19:42:00.784 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 19:42:00.785 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 19:42:00.885 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 19:42:00.889 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 19:42:00.889 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 19:42:00.890 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 19:42:00.911 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 19:42:00.911 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 747 ms
2025-07-03 19:42:00.983 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 19:42:01.026 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 19:42:01.046 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 19:42:01.056 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 19:42:01.131 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 19:42:01.141 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 19:42:01.181 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 19:42:01.182 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 19:42:01.201 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 19:42:01.484 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 19:42:01.513 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:42:01.537 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:01.538 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:01.539 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:01.541 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:01.543 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:01.543 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:01.544 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:01.545 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:01.549 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:01.549 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:01.550 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:01.550 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:01.551 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:01.552 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:01.554 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:01.554 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:01.554 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:01.554 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:01.556 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:01.559 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:01.565 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:01.565 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:01.566 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:01.568 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:01.570 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:01.571 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:01.572 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:01.573 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:01.573 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:01.574 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:01.799 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 19:42:01.988 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 19:42:01.998 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", beanRef="__listener", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 19:42:02.039 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 19:42:02.083 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 19:42:02.145 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 19:42:02.175 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 19:42:02.193 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 19:42:02.366 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 19:42:02.393 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 19:42:02.396 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 19:42:02.440 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 19:42:02.479 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 19:42:02.481 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 19:42:02.491 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:42:02.564 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:42:02.599 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:02.619 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:42:02.620 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:42:02.631 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:42:02.632 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 19:42:02.633 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 19:42:02.634 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751564522634 with initial instances count: 3
2025-07-03 19:42:02.636 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 19:42:02.636 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564522636, current=UP, previous=STARTING]
2025-07-03 19:42:02.637 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:42:02.637 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 19:42:02.638 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:42:02.639 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:02.639 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 19:42:02.639 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564522639, current=DOWN, previous=UP]
2025-07-03 19:42:02.640 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-03 19:42:02.642 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:42:02.643 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 19:42:02.643 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@46a6368f] as "application/json"
2025-07-03 19:42:02.643 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 19:42:02.644 [main] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 19:42:02.652 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:42:02.652 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:42:02.652 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:42:02.653 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:42:02.653 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:42:02.654 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:42:02.654 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:02.655 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@46a6368f] as "application/json"
2025-07-03 19:42:02.656 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:42:02.656 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:42:02.656 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:42:02.656 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:42:02.657 [main] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 19:42:02.658 [main] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 19:42:02.658 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:02.659 [main] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionManagerApplicationKt.main(SubscriptionManagerApplication.kt:64)

2025-07-03 19:42:02.659 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:42:02.659 [main] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionManagerApplicationKt.main(SubscriptionManagerApplication.kt:64)
2025-07-03 19:42:02.661 [main] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 19:42:02.669 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-03 19:42:02.676 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 3000 was already in use.

Action:

Identify and stop the process that's listening on port 3000 or configure this application to listen on another port.

2025-07-03 19:42:02.958 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:02.958 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:02.959 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:02.960 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:02.960 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:02.961 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:02.961 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:02.961 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:02.962 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:02.962 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:02.962 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:02.962 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:02.963 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:02.963 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:02.963 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:02.964 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:02.973 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:02.973 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:02.974 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:02.975 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:02.975 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:02.975 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:02.975 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:02.976 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:02.976 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:02.977 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:02.977 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:02.978 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:02.978 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:02.978 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:02.993 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:02.994 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:07.995 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:07.996 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:12.997 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:12.998 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:17.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:17.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight FETCH request with correlation id 271 due to node 1 being disconnected (elapsed time since creation: 132ms, elapsed time since send: 132ms, request timeout: 30000ms)
2025-07-03 19:42:17.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=1295899626, epoch=123) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:42:17.576 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 2147483646 disconnected.
2025-07-03 19:42:17.576 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-07-03 19:42:17.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:17.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 272 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:17.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:17.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 273 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:18.000 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:18.000 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:18.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:18.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 275 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:18.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=1295899626, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:42:18.357 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:18.357 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:19.070 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:19.070 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:20.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:20.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:21.102 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:21.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:21.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:21.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:22.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:22.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:42:23.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:23.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:23.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:23.986 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 277 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:25.155 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:25.155 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 278 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:26.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:42:26.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 279 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:42:27.228 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 281 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 19:42:27.229 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: aitu2SL9QJCndP_I9gbohA
2025-07-03 19:42:27.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting the last seen epoch of partition subscription-created-0 to 0 since the associated topicId changed from null to C6xXYHdYSDG9iIUVjGatEg
2025-07-03 19:42:27.537 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:42:27.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Attempt to heartbeat with Generation{generationId=1, memberId='consumer-subscription-manager-group-1-bcf86e85-c706-4015-b1f2-7646f12762b2', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-07-03 19:42:27.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-07-03 19:42:27.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-07-03 19:42:27.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Giving away all assigned partitions as lost since generation/memberID has been reset,indicating that consumer is in old state or no longer part of the group
2025-07-03 19:42:27.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Lost previously assigned partitions subscription-created-0
2025-07-03 19:42:27.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions lost: [subscription-created-0]
2025-07-03 19:42:27.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 19:42:27.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:27.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:42:27.549 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-111e6537-3f89-4b72-bf35-69136a8303f3
2025-07-03 19:42:27.549 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 19:42:27.550 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 19:42:27.558 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-111e6537-3f89-4b72-bf35-69136a8303f3', protocol='range'}
2025-07-03 19:42:27.559 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-111e6537-3f89-4b72-bf35-69136a8303f3=Assignment(partitions=[subscription-created-0])}
2025-07-03 19:42:27.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-111e6537-3f89-4b72-bf35-69136a8303f3', protocol='range'}
2025-07-03 19:42:27.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 19:42:27.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 19:42:27.581 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 19:42:27.973 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:42:27.974 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:42:27.975 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:27.975 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:27.981 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:42:27.982 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:42:27.982 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:42:28.068 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 19:42:28.068 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 19:42:28.069 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:28.070 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:33.071 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:33.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:38.074 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:38.075 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:39.535 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:39.536 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:39.536 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:39.539 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:39.540 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:39.541 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:39.541 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:39.541 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:39.542 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:39.542 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:39.543 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:39.544 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:39.545 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:39.545 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:39.545 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:39.546 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:39.558 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:39.558 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:39.559 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:39.560 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:39.560 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:39.560 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:39.561 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:39.562 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:39.562 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:39.562 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:39.563 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:39.564 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:39.564 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:39.564 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:41.113 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:41.113 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:41.114 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:41.115 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:41.115 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:41.116 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:41.116 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:41.116 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:41.117 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:41.117 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:41.117 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:41.118 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:41.118 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:41.118 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:41.118 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:41.119 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:41.122 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:41.122 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:41.122 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:41.124 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:41.124 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:41.124 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:41.125 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:41.125 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:41.125 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:41.126 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:41.126 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:41.127 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:41.127 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:41.128 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:43.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:43.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:48.078 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:48.078 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:49.457 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:49.458 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:49.458 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:49.459 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:49.460 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:49.460 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:49.460 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:49.460 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:49.461 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:49.461 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:49.461 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:49.462 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:49.462 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:49.462 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:49.462 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:49.463 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:49.470 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:49.470 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:49.472 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:49.473 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:49.474 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:49.474 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:49.474 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:49.475 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:49.475 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:49.476 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:49.477 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:49.478 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:49.478 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:49.478 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:50.463 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:50.463 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:50.463 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:50.464 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:50.465 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:50.465 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:50.465 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:50.466 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:50.467 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:50.467 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:50.467 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:50.468 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:50.468 [http-nio-3000-exec-2] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:50.468 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:50.468 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:50.469 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:50.474 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:50.474 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:50.475 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:50.476 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:50.476 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:50.476 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:50.476 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:50.477 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:50.477 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:50.478 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:50.478 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:50.479 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:50.479 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:50.480 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:53.079 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:53.079 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:57.988 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:42:57.988 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:57.990 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:42:57.990 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:42:57.998 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:42:57.998 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:42:57.998 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:42:58.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:42:58.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:42:59.428 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:59.428 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:59.428 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:59.429 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:59.430 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:59.430 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.430 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:59.430 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.431 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:59.431 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:59.431 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:59.432 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:59.432 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:59.433 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.433 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:59.433 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.441 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:59.441 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:59.442 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.442 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.443 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.443 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:59.443 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.444 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:59.444 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:59.444 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.445 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.446 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.446 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:59.446 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.751 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:59.751 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:59.751 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:59.751 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:59.752 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:59.752 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.753 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:59.753 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.753 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:42:59.754 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:42:59.754 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:42:59.754 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:42:59.755 [http-nio-3000-exec-5] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:42:59.755 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.755 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:42:59.756 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.765 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:59.765 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:59.766 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.767 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.767 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.768 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:59.768 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:42:59.769 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:42:59.769 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:42:59.770 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.771 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:42:59.772 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:42:59.772 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:42:59.772 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:03.081 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:03.082 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:08.083 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:08.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:10.312 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:10.312 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:10.314 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:10.319 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:10.321 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:10.322 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:10.325 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:10.332 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:10.335 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:10.335 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:10.335 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:10.335 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:10.336 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:10.336 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:10.336 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:10.337 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:10.337 [http-nio-3000-exec-1] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:10.337 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:10.337 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:10.337 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:10.337 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:10.338 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:10.338 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:10.340 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:10.340 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:10.341 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:10.341 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:10.342 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:10.342 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:10.342 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:11.334 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:11.334 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:11.334 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:11.335 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:11.336 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:11.336 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:11.336 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:11.336 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:11.337 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:11.337 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:11.337 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:11.338 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:11.338 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:11.339 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:11.339 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:11.339 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:11.349 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:11.350 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:11.351 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:11.351 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:11.352 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:11.352 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:11.352 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:11.353 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:11.353 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:11.354 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:11.355 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:11.355 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:11.355 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:11.356 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:11.653 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 57654 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 19:43:11.654 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 19:43:11.654 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 19:43:12.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 19:43:12.085 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2025-07-03 19:43:12.165 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 19:43:12.276 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 19:43:12.277 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 19:43:12.373 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 19:43:12.377 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 19:43:12.378 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 19:43:12.378 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 19:43:12.401 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 19:43:12.401 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
2025-07-03 19:43:12.475 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 19:43:12.518 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 19:43:12.536 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 19:43:12.547 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 19:43:12.622 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 19:43:12.631 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 19:43:12.670 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 19:43:12.670 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 19:43:12.690 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 19:43:12.938 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 19:43:12.974 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:43:13.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:13.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:13.186 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 19:43:13.362 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 19:43:13.371 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", beanRef="__listener", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 19:43:13.406 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 19:43:13.445 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 19:43:13.489 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 19:43:13.505 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 19:43:13.519 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 19:43:13.671 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 19:43:13.692 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 19:43:13.695 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 19:43:13.734 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 19:43:13.769 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 19:43:13.773 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 19:43:13.782 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 19:43:13.853 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 19:43:13.885 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:13.904 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:43:13.905 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:43:13.916 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 19:43:13.917 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 19:43:13.918 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 19:43:13.919 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751564593919 with initial instances count: 2
2025-07-03 19:43:13.921 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 19:43:13.921 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564593921, current=UP, previous=STARTING]
2025-07-03 19:43:13.922 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:43:13.922 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 19:43:13.923 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:43:13.924 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:13.924 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 19:43:13.924 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751564593924, current=DOWN, previous=UP]
2025-07-03 19:43:13.925 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-03 19:43:13.927 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 19:43:13.928 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 19:43:13.928 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 19:43:13.929 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 19:43:13.929 [main] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 19:43:13.934 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:43:13.934 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:43:13.934 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:43:13.935 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:43:13.935 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 19:43:13.936 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 19:43:13.936 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:13.937 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 19:43:13.938 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:43:13.938 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:43:13.938 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:43:13.938 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:43:13.938 [main] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 19:43:13.939 [main] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 19:43:13.939 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:13.940 [main] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionManagerApplicationKt.main(SubscriptionManagerApplication.kt:64)

2025-07-03 19:43:13.940 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 19:43:13.940 [main] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.github.rezaiyan.subscriptionmanager.SubscriptionManagerApplicationKt.main(SubscriptionManagerApplication.kt:64)
2025-07-03 19:43:13.942 [main] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 19:43:13.949 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-03 19:43:13.956 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 3000 was already in use.

Action:

Identify and stop the process that's listening on port 3000 or configure this application to listen on another port.

2025-07-03 19:43:14.225 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:14.225 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:14.225 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:14.226 [http-nio-3000-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:14.227 [http-nio-3000-exec-3] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:14.227 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:14.227 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:14.228 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:14.228 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:43:14.229 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:43:14.229 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:43:14.230 [http-nio-3000-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:43:14.230 [http-nio-3000-exec-4] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:43:14.231 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:14.231 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:43:14.231 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:14.238 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:14.239 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:14.239 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:14.239 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:14.240 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:14.240 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:14.240 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:14.241 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:43:14.241 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:43:14.241 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:14.242 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:43:14.242 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:43:14.242 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:43:14.243 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:43:18.088 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:18.088 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:23.090 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:23.090 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:28.005 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:43:28.005 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:43:28.006 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:28.006 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:28.016 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:43:28.016 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:43:28.017 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:43:28.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:28.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:33.092 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:33.093 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:38.094 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:38.094 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:43.096 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:43.097 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:48.098 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:48.099 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:49.502 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 2147483646 disconnected.
2025-07-03 19:43:49.503 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:49.503 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight FETCH request with correlation id 484 due to node 1 being disconnected (elapsed time since creation: 316ms, elapsed time since send: 316ms, request timeout: 30000ms)
2025-07-03 19:43:49.503 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight METADATA request with correlation id 485 due to node 1 being disconnected (elapsed time since creation: 212ms, elapsed time since send: 212ms, request timeout: 30000ms)
2025-07-03 19:43:49.503 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=1432460477, epoch=161) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:43:49.503 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-07-03 19:43:49.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:49.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 486 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:43:49.762 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:49.762 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 487 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:43:49.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:49.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 488 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:43:50.374 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:50.375 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:51.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:51.189 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:52.052 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:52.052 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:52.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:52.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:53.101 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:53.101 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:53.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:53.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:55.090 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:55.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:56.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:56.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:57.280 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:57.280 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:58.023 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:43:58.023 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:43:58.023 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:58.023 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:43:58.031 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:43:58.031 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:43:58.031 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:43:58.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:43:58.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:43:58.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:58.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:43:59.376 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:43:59.376 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:00.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:00.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:01.566 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:01.566 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:02.638 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:02.638 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:03.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:03.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:03.720 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:03.721 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:04.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:04.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:06.112 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:06.113 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:07.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:07.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:08.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:08.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:08.108 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:08.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:09.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:09.170 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:10.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:10.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:11.158 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:11.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:12.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:12.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:13.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:13.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:13.164 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:13.164 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:14.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:14.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:15.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:15.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:16.269 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:16.270 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:17.388 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:17.388 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:18.113 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:18.114 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:18.573 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:18.574 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:19.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:19.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:20.866 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:20.867 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:21.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:21.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:23.051 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:23.052 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:23.115 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:23.116 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:23.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:23.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:25.039 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:25.039 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:26.108 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:26.108 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:27.025 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:27.026 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:28.038 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:44:28.038 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:44:28.038 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:44:28.038 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:44:28.046 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:44:28.046 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:44:28.046 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:44:28.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:28.119 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:28.222 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:28.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:29.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:29.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:30.206 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:30.207 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:31.328 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:31.328 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:32.298 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:32.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:33.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:33.120 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:33.326 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:33.326 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:34.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:34.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:35.206 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:35.206 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:36.326 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:36.328 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:37.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:37.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:38.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:38.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:38.583 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:38.583 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:39.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:39.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:40.873 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:40.874 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:42.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:42.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:43.063 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:43.063 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:43.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:43.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:44.236 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:44.237 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:45.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:45.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:46.376 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:46.376 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:47.600 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:47.601 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:48.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:48.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:48.739 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:48.740 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:49.607 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:49.607 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:50.677 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:50.678 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:51.703 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:51.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:52.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:52.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:53.129 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:53.129 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:54.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:54.054 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:55.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:55.023 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:56.090 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:56.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:58.052 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:44:58.052 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:44:58.053 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:44:58.053 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:44:58.063 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:44:58.064 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:44:58.063 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:44:58.077 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:58.077 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:44:58.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:44:58.134 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:44:59.298 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:44:59.300 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:00.368 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:00.368 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:01.238 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:01.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:02.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:02.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:03.129 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:03.130 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:03.135 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:03.136 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:04.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:04.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:05.173 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:05.174 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:06.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:06.091 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:07.314 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:07.315 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:08.137 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:08.138 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:08.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:08.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:09.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:09.160 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:10.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:10.332 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:11.353 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:11.353 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:12.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:13.140 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:13.140 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:13.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:13.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:15.077 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:15.078 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:16.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:16.300 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:17.167 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:17.167 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:18.079 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:18.079 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:18.140 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:18.141 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:19.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:19.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:20.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:20.222 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:21.140 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:21.141 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:22.309 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:22.309 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:23.142 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:23.142 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:23.397 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:23.398 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:24.568 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:24.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:25.537 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:25.537 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:26.658 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:26.658 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:27.580 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:27.581 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:27.768 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:45:28.071 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:45:28.071 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:45:28.072 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:45:28.072 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:45:28.077 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:45:28.077 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:45:28.078 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:45:28.143 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:28.144 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:28.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:28.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:29.521 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:29.522 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:30.489 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:30.490 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:31.560 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:31.560 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:32.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:32.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:33.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:33.146 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:33.810 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:33.811 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:34.676 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:34.677 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:35.848 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:35.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:36.817 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:36.818 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:37.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:37.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:38.147 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:38.148 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:38.710 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:38.711 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:39.729 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:39.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:40.748 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:40.749 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:41.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:41.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:42.735 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:42.736 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:43.149 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:43.149 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:43.815 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:43.815 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:44.685 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:44.686 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:45.651 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:45.651 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:46.566 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:46.566 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:47.432 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:47.432 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:48.152 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:48.152 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:48.611 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:48.611 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:49.476 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:49.476 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:50.647 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:50.648 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:51.567 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:51.568 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:53.153 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:53.153 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:53.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:53.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:54.780 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:54.780 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:55.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:55.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:56.715 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:56.715 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:57.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:57.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:58.084 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:45:58.084 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:45:58.084 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:45:58.085 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:45:58.090 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:45:58.090 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:45:58.091 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:45:58.155 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:45:58.156 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:45:58.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:58.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:45:59.840 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:45:59.840 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:00.910 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:00.910 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:01.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:01.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:02.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:02.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:03.158 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:03.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:03.817 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:03.817 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:04.941 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:04.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:06.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:06.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:06.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:06.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:07.992 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:07.993 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:08.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:08.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:09.180 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:09.180 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:10.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:10.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:10.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:10.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:11.884 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:11.884 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:12.908 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:12.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:13.163 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:13.164 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:13.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:13.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:14.777 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:46:14.778 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:46:14.782 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:46:14.795 [http-nio-3000-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:46:14.801 [http-nio-3000-exec-9] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:46:14.802 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:14.802 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:46:14.804 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:14.808 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:46:14.809 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:46:14.810 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:46:14.810 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:46:14.810 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:46:14.812 [http-nio-3000-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:46:14.812 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:14.813 [http-nio-3000-exec-10] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:46:14.813 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:14.813 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:46:14.813 [http-nio-3000-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:14.813 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:14.814 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:14.814 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:46:14.815 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:14.817 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:46:14.817 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:46:14.818 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:14.819 [http-nio-3000-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:14.820 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:14.820 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:46:14.820 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:14.995 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:14.995 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:16.064 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:16.065 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:17.185 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:17.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:18.166 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:18.166 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:18.370 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:18.370 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:19.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:19.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:20.355 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:20.356 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:20.852 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:46:20.853 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:46:20.854 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:46:20.856 [http-nio-3000-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:46:20.858 [http-nio-3000-exec-6] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:46:20.858 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:20.859 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:46:20.860 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:20.861 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 19:46:20.861 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 19:46:20.862 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Fetching all subscriptions from local database
2025-07-03 19:46:20.864 [http-nio-3000-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 19:46:20.868 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:46:20.868 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:46:20.870 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:20.879 [http-nio-3000-exec-7] INFO  c.g.r.s.SubscriptionController - GET /api/subscriptions - Found 2 subscriptions
2025-07-03 19:46:20.879 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:20.879 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[Subscription(id=1, name=Test Netflix, description=Streaming service for testing, amount=15.99, freq (truncated)...]
2025-07-03 19:46:20.880 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:20.882 [http-nio-3000-exec-1] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:20.883 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:20.883 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:46:20.884 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:20.885 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions/totals", parameters={}
2025-07-03 19:46:20.885 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getSubscriptionTotals()
2025-07-03 19:46:20.886 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='MONTHLY' 
                then s1_0.amount 
            else (s1_0.amount/12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:20.887 [http-nio-3000-exec-8] DEBUG org.hibernate.SQL - 
    select
        sum(case 
            when s1_0.frequency='YEARLY' 
                then s1_0.amount 
            else (s1_0.amount*12) 
    end) 
from
    subscription s1_0 
where
    s1_0.active=true
2025-07-03 19:46:20.888 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-03 19:46:20.888 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{monthlyTotal=0, yearlyTotal=0}]
2025-07-03 19:46:20.888 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 19:46:21.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:21.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:22.290 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:22.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:23.168 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:23.168 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:23.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:23.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:24.136 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:24.136 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:25.153 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:25.153 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:26.374 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:26.374 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:27.288 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:27.288 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:28.099 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:46:28.099 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:46:28.100 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:46:28.100 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:46:28.124 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:46:28.124 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:46:28.125 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:46:28.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:28.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:28.525 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:28.526 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:29.594 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:29.595 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:30.612 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:30.613 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:31.831 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:31.831 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:32.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:32.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:33.172 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:33.174 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:33.888 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:33.888 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:35.006 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:35.006 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:36.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:36.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:37.144 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:37.144 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:38.176 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:38.176 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:38.380 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:38.381 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:39.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:39.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:40.054 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:40.054 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:41.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:41.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:42.394 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:42.394 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:43.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:43.178 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:43.383 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:43.383 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:44.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:44.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:45.370 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:45.370 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:46.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:46.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:47.098 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:47.099 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:48.179 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:48.179 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:48.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:48.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:49.197 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:49.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:50.315 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:50.316 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:51.385 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:51.385 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:52.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:52.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:53.181 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:53.181 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:53.538 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:53.539 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:54.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:54.609 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:55.625 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:55.626 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:56.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:56.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:57.760 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:57.760 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:58.132 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:46:58.132 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:46:58.136 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:46:58.136 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:46:58.173 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:46:58.173 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:46:58.176 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:46:58.182 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:46:58.182 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:46:58.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:58.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:46:59.560 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:46:59.561 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:00.779 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:00.779 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:01.645 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:01.645 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:02.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:02.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:03.184 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:03.184 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:03.441 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:03.441 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:04.358 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:04.358 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:05.426 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:05.426 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:06.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:06.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:07.361 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:07.361 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:08.187 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:08.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:08.494 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:08.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:09.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:09.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:10.480 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:10.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:11.347 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:11.347 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:12.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:12.520 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:13.189 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:13.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:13.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:13.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:14.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:14.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:15.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:15.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:16.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:16.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:18.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:18.189 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:18.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:18.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:19.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:19.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:20.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:20.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:21.200 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:21.201 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:23.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:23.192 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:23.244 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:23.245 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:24.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:24.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:25.281 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:25.282 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:26.505 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:26.505 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:27.727 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:27.728 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:28.178 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:47:28.179 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:47:28.179 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:47:28.180 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:47:28.188 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:47:28.188 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:47:28.189 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:47:28.193 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:28.193 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:28.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:28.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:29.619 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:29.619 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:30.790 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:30.790 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:31.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:31.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:32.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:32.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:33.194 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:33.194 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:33.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:33.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:34.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:34.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:36.093 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:36.093 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:38.196 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:38.197 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:38.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:38.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:39.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:39.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:40.071 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:40.071 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:47:41.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:41.039 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 489 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:47:42.004 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:47:42.004 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 490 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:47:43.088 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 492 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 19:47:43.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting the last seen epoch of partition subscription-created-0 to 0 since the associated topicId changed from null to C6xXYHdYSDG9iIUVjGatEg
2025-07-03 19:47:43.192 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:47:43.197 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:43.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:48.199 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:48.200 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:53.202 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:53.203 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:47:58.193 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:47:58.193 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:47:58.194 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:47:58.194 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:47:58.202 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:47:58.202 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:47:58.202 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:47:58.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:47:58.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:03.206 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:03.207 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:08.208 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:08.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:13.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:13.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:18.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:18.213 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:23.215 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:23.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:28.206 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:48:28.206 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:48:28.209 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:48:28.209 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:48:28.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:28.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:28.218 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:48:28.218 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:48:28.219 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:48:33.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:33.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:38.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:38.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:43.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:43.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:48.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:48.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:53.222 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:53.222 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:58.220 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:48:58.221 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:48:58.222 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:48:58.222 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:48:58.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:48:58.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:48:58.229 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:48:58.229 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:48:58.229 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:49:03.225 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:03.225 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:08.226 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:08.227 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:13.229 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:13.229 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:18.230 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:18.231 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:23.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:23.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:28.234 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:49:28.235 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:49:28.235 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:49:28.235 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:28.235 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:49:28.236 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:28.241 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:49:28.241 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:49:28.241 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:49:33.238 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:33.238 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:38.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:38.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:43.240 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:43.240 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:48.241 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:48.241 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:53.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:53.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:58.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:49:58.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:49:58.243 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:49:58.243 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:49:58.244 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:49:58.244 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:49:58.250 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:49:58.250 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:49:58.250 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:50:03.244 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:03.245 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:08.245 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:08.246 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:13.246 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:13.246 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:18.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:18.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight FETCH request with correlation id 854 due to node 1 being disconnected (elapsed time since creation: 398ms, elapsed time since send: 398ms, request timeout: 30000ms)
2025-07-03 19:50:18.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=1116804645, epoch=305) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:50:18.086 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 2147483646 disconnected.
2025-07-03 19:50:18.086 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-07-03 19:50:18.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:18.188 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 855 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:50:18.248 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:18.248 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:18.290 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:18.290 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 856 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:50:18.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:18.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 857 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:50:18.906 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:18.906 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 858 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2025-07-03 19:50:19.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:19.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 859 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 19:50:20.687 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:20.687 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:21.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:21.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:22.617 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:22.617 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:23.249 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:23.249 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:23.759 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:23.760 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:24.776 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:24.776 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:25.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:25.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:26.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:26.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:27.725 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:27.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:27.776 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 19:50:28.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:28.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:28.256 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:50:28.256 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:50:28.257 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:50:28.257 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:50:28.265 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:50:28.265 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:50:28.265 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:50:28.709 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:28.710 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:29.677 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:29.677 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:30.641 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:30.642 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:31.507 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:31.508 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:32.523 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:32.523 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:33.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:33.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:33.356 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:33.357 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:34.316 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:34.317 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:35.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:35.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:36.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:36.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 860 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:50:37.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:37.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 861 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:50:38.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:38.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:38.459 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:38.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 862 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:50:39.579 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:39.579 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:40.600 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:40.600 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:41.722 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:41.723 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:42.741 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:42.741 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:43.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:43.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:43.922 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:43.922 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:44.937 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:44.937 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:45.800 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:45.800 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:46.820 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:46.820 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:47.683 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:47.684 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:48.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:48.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:48.617 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:48.618 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:49.737 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:49.737 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:50.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:50.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:51.825 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:51.826 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:52.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:52.893 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:53.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:53.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:53.769 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:53.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:54.685 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:54.686 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:55.802 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:55.803 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:57.024 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:57.025 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:57.841 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:57.841 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:50:58.264 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:50:58.265 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:50:58.267 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:50:58.267 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:50:58.268 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:50:58.268 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:50:58.277 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:50:58.277 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:50:58.278 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:50:58.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:50:58.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:00.148 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:00.149 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:01.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:01.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:02.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:02.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:03.197 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:03.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:03.266 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:03.266 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:04.163 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:04.163 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:05.234 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:05.235 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:06.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:06.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:07.578 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:07.578 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:08.269 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:08.269 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:08.628 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:08.628 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:09.748 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:09.748 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:10.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:10.922 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:11.832 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:11.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:13.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:13.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:13.271 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:13.271 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:14.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:14.239 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:15.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:15.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:16.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:16.277 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:17.340 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:17.340 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:18.273 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:18.274 [kafka-coordinator-heartbeat-thread | subscription-manager-group] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:18.274 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=1116804645, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:51:18.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:18.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:19.344 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:19.344 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:20.462 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:20.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:21.477 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:21.477 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:22.496 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:22.496 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:23.277 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:23.277 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:23.583 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:23.583 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:24.550 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:24.550 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:25.466 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:25.466 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:26.688 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:26.688 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:27.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:27.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:28.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:28.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:28.283 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:51:28.283 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:51:28.285 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:51:28.285 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:51:28.289 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:51:28.289 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:51:28.290 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:51:28.634 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:28.634 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:29.749 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:29.749 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:30.814 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:30.814 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 864 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:31.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:31.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 865 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:33.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:33.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 866 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:33.279 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:33.279 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:33.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 19:51:38.281 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:38.281 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:38.387 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 2147483646 disconnected.
2025-07-03 19:51:38.387 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:38.387 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight FETCH request with correlation id 881 due to node 1 being disconnected (elapsed time since creation: 408ms, elapsed time since send: 408ms, request timeout: 30000ms)
2025-07-03 19:51:38.388 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight METADATA request with correlation id 882 due to node 1 being disconnected (elapsed time since creation: 5ms, elapsed time since send: 5ms, request timeout: 30000ms)
2025-07-03 19:51:38.388 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error sending fetch request (sessionId=982194777, epoch=8) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-07-03 19:51:38.388 [kafka-coordinator-heartbeat-thread | subscription-manager-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-07-03 19:51:38.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:38.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 883 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:38.641 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:38.642 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 884 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:38.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:38.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 885 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-03 19:51:39.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:39.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:40.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:40.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:41.084 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:41.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:42.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:42.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:43.270 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:43.271 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:43.282 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:43.282 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:44.082 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:44.083 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:45.098 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:45.099 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:46.065 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:46.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:47.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:47.081 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:47.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:47.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:48.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:48.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:48.796 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:48.797 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:49.918 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:49.918 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:50.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:50.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:51.848 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:51.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:52.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:52.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:53.286 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:53.286 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:53.899 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:53.900 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:54.865 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:54.866 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:55.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:55.731 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:56.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:56.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:57.560 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:57.561 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:58.288 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:51:58.289 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:51:58.295 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:51:58.295 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:51:58.296 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:51:58.296 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:51:58.304 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:51:58.304 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 19:51:58.305 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 19:51:58.647 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:58.647 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:51:59.616 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:51:59.616 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:00.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:00.534 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:01.551 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:01.552 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:02.618 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:02.619 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:03.290 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:03.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:03.648 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:03.648 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:04.614 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:04.615 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:05.735 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:05.736 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:06.903 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:06.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:08.075 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:08.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:08.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:08.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:08.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:08.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:10.026 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:10.026 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:11.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:11.047 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:13.030 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:13.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:13.294 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:13.295 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:14.213 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:14.213 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:15.283 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:15.283 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:16.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:16.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:17.016 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:17.016 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:17.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:17.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:18.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:18.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:19.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:19.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:19.977 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:19.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:20.996 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:20.996 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:21.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:21.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:22.729 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:22.729 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:23.297 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:23.298 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:23.809 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:23.811 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:24.875 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:24.876 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:25.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:25.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:27.112 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:27.112 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:28.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:28.233 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 19:52:28.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 19:52:28.300 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 19:52:28.308 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:52:28.308 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:52:28.309 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:52:28.309 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:52:28.330 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 19 more

2025-07-03 19:52:28.330 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 19:52:28.330 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 19:52:28.331 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 19:52:28.343 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751564427891
2025-07-03 19:52:28.343 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 19:52:28.348 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:52:28.349 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 19:52:28.349 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 20 more

2025-07-03 19:52:28.349 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 19:52:28.349 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 19:52:28.349 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2025-07-03 19:52:28.349 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 19:52:28.349 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 19:52:29.199 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node 1 disconnected.
2025-07-03 19:52:29.199 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 20:07:54.676 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 70321 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 20:07:54.678 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 20:07:54.679 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 20:07:55.066 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 20:07:55.123 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 1 JPA repository interface.
2025-07-03 20:07:55.212 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 20:07:55.331 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 20:07:55.333 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 20:07:55.435 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 20:07:55.439 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 20:07:55.440 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 20:07:55.440 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 20:07:55.464 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 20:07:55.464 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 768 ms
2025-07-03 20:07:55.542 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 20:07:55.593 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 20:07:55.614 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 20:07:55.626 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 20:07:55.708 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 20:07:55.718 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 20:07:55.783 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 20:07:55.784 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 20:07:55.813 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 20:07:56.102 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 20:07:56.147 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:07:56.419 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 20:07:56.638 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 20:07:56.650 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 20:07:56.716 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 20:07:56.762 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 20:07:56.809 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 20:07:56.826 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 20:07:56.842 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 20:07:57.007 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 20:07:57.030 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 20:07:57.033 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 20:07:57.076 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 20:07:57.113 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 20:07:57.115 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 20:07:57.124 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 20:07:57.197 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 20:07:57.233 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:07:57.256 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 20:07:57.257 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 20:07:57.265 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 20:07:57.266 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 20:07:57.266 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 20:07:57.268 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751566077267 with initial instances count: 0
2025-07-03 20:07:57.270 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 20:07:57.270 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566077270, current=UP, previous=STARTING]
2025-07-03 20:07:57.271 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:07:57.271 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 20:07:57.272 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:07:57.273 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:07:57.276 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 20:07:57.277 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 20:07:57.277 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 20:07:57.289 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:07:57.289 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:07:57.298 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 20:07:57.301 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 20:07:57.334 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 20:07:57.334 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 20:07:57.334 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751566077333
2025-07-03 20:07:57.334 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 20:07:57.335 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 20:07:57.338 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:07:57.345 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.824 seconds (process running for 3.028)
2025-07-03 20:07:57.347 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 20:07:57.379 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 20:07:57.389 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 20:07:57.389 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 20:07:57.530 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:07:57.531 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: 6MFTD6X0T-6fQ6sBurulGQ
2025-07-03 20:07:57.635 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 4 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:07:57.842 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 20:07:57.843 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:07:57.855 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-63b8e676-4bac-4d1a-ac80-73365fae9bce
2025-07-03 20:07:57.855 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 20:07:57.855 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:07:57.866 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-63b8e676-4bac-4d1a-ac80-73365fae9bce', protocol='range'}
2025-07-03 20:07:57.868 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-63b8e676-4bac-4d1a-ac80-73365fae9bce=Assignment(partitions=[subscription-created-0])}
2025-07-03 20:07:57.896 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-63b8e676-4bac-4d1a-ac80-73365fae9bce', protocol='range'}
2025-07-03 20:07:57.897 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 20:07:57.899 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 20:07:57.902 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@536905ed
2025-07-03 20:07:57.903 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 20:07:57.903 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 20:07:57.903 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 20:07:57.905 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 20:07:57.909 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 20:07:57.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 20:07:57.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 20:07:57.918 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 20:07:57.928 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 20:07:57.945 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@160ec3e9]
2025-07-03 20:07:57.951 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 20:07:58.803 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 20:07:58.803 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566078803, current=DOWN, previous=UP]
2025-07-03 20:07:58.803 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:07:58.804 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:07:58.804 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:07:58.804 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 20:07:58.805 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:07:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 20:07:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 20:07:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:07:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-63b8e676-4bac-4d1a-ac80-73365fae9bce sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 20:07:58.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:07:58.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:07:58.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 20:07:58.807 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:301)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-07-03 20:07:58.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:07:58.808 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:07:58.807 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
2025-07-03 20:07:58.810 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:07:58.810 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:07:58.812 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 20:07:58.815 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 20:07:58.815 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 20:07:58.815 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:07:58.816 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:07:58.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 20:07:58.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 20:07:58.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 20:07:58.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 20:07:58.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 20:07:58.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 20:07:58.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 20:07:59.975 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:07:59.976 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 20:07:59.977 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 20:07:59.978 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 20:08:02.984 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 20:08:02.986 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:08:02.986 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:08:02.987 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:08:02.987 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:08:02.987 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:08:02.990 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 20:12:04.799 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 71574 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 20:12:04.800 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 20:12:04.801 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 20:12:05.153 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 20:12:05.214 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
2025-07-03 20:12:05.302 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 20:12:05.424 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 20:12:05.425 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 20:12:05.529 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 20:12:05.533 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 20:12:05.533 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 20:12:05.533 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 20:12:05.557 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 20:12:05.558 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 738 ms
2025-07-03 20:12:05.635 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 20:12:05.685 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 20:12:05.706 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 20:12:05.718 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 20:12:05.803 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 20:12:05.814 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 20:12:05.870 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4742466e
2025-07-03 20:12:05.871 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 20:12:05.902 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 20:12:06.185 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 20:12:06.231 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:12:06.467 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 20:12:06.656 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 20:12:06.665 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 20:12:06.705 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 20:12:06.748 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 20:12:06.798 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 20:12:06.816 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 20:12:06.832 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 20:12:06.997 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 20:12:07.022 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 20:12:07.026 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 20:12:07.068 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 20:12:07.106 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 20:12:07.107 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 20:12:07.116 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 20:12:07.116 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 20:12:07.117 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 20:12:07.117 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 20:12:07.117 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 20:12:07.117 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 20:12:07.117 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 20:12:07.187 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 20:12:07.223 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:12:07.246 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 20:12:07.247 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 20:12:07.255 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 20:12:07.256 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 20:12:07.256 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 20:12:07.258 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751566327257 with initial instances count: 0
2025-07-03 20:12:07.260 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 20:12:07.260 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566327260, current=UP, previous=STARTING]
2025-07-03 20:12:07.261 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:12:07.261 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 20:12:07.262 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:12:07.263 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:12:07.266 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 20:12:07.267 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 20:12:07.267 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1db30771] as "application/json"
2025-07-03 20:12:07.276 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:12:07.276 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:12:07.288 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 20:12:07.291 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 20:12:07.324 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 20:12:07.324 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 20:12:07.324 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751566327324
2025-07-03 20:12:07.325 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 20:12:07.325 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 20:12:07.329 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:12:07.336 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.708 seconds (process running for 2.909)
2025-07-03 20:12:07.338 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 20:12:07.370 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 20:12:07.378 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 20:12:07.378 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 20:12:07.504 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:12:07.504 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: DjR4sJOgQ12mRIAcii-5Og
2025-07-03 20:12:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 4 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:12:07.918 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 20:12:07.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:12:07.934 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-e8024651-b0ba-4bf0-bc5a-bef247ff88df
2025-07-03 20:12:07.935 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 20:12:07.935 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:12:07.946 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-e8024651-b0ba-4bf0-bc5a-bef247ff88df', protocol='range'}
2025-07-03 20:12:07.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-e8024651-b0ba-4bf0-bc5a-bef247ff88df=Assignment(partitions=[subscription-created-0])}
2025-07-03 20:12:07.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-e8024651-b0ba-4bf0-bc5a-bef247ff88df', protocol='range'}
2025-07-03 20:12:07.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 20:12:07.973 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 20:12:07.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 20:12:07.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 20:12:07.986 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 20:12:08.067 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 20:12:08.067 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 20:12:08.067 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 20:12:08.067 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 20:12:08.067 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 20:12:08.068 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@18b378a2
2025-07-03 20:12:08.068 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@615c9e9b
2025-07-03 20:12:08.068 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 20:12:08.068 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 20:12:08.074 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 20:12:08.086 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 20:12:08.099 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 20:12:08.115 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@39e256f0]
2025-07-03 20:12:08.122 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 20:12:08.965 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 20:12:08.965 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566328965, current=DOWN, previous=UP]
2025-07-03 20:12:08.965 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:12:08.966 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:12:08.966 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:12:08.966 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1db30771] as "application/json"
2025-07-03 20:12:08.967 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:12:08.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 20:12:08.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 20:12:08.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:12:08.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-e8024651-b0ba-4bf0-bc5a-bef247ff88df sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 20:12:08.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:12:08.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:12:08.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 20:12:08.969 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:301)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-07-03 20:12:08.969 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
2025-07-03 20:12:08.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:12:08.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:12:08.971 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:12:08.971 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:12:08.973 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1db30771] as "application/json"
2025-07-03 20:12:09.018 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 20:12:09.018 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 20:12:09.025 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 20:12:09.027 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 20:12:09.028 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 20:12:09.028 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 20:12:09.028 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 20:12:09.034 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Socket closed stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Socket closed
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.SocketException: Socket closed
	at java.base/sun.nio.ch.NioSocketImpl.endRead(NioSocketImpl.java:243)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:323)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1109)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:149)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:247)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:54)
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:299)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 20:12:09.034 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Socket closed
2025-07-03 20:12:09.034 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:12:09.035 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:12:09.037 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:12:09.037 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 20:12:09.040 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 20:12:09.041 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 20:12:12.047 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 20:12:12.051 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:12:12.052 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:12:12.054 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:12:12.054 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:12:12.054 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:12:12.057 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 20:13:19.246 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 72395 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 20:13:19.247 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 20:13:19.247 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 20:13:19.602 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 20:13:19.664 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
2025-07-03 20:13:19.754 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 20:13:19.875 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 20:13:19.877 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 20:13:19.979 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 20:13:19.983 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 20:13:19.984 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 20:13:19.984 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 20:13:20.008 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 20:13:20.008 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 743 ms
2025-07-03 20:13:20.087 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 20:13:20.137 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 20:13:20.158 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 20:13:20.170 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 20:13:20.253 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 20:13:20.263 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 20:13:20.323 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 20:13:20.324 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 20:13:20.350 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 20:13:20.627 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 20:13:20.675 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:13:20.954 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 20:13:21.140 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 20:13:21.148 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 20:13:21.189 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 20:13:21.231 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 20:13:21.279 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 20:13:21.296 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 20:13:21.313 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 20:13:21.481 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 20:13:21.506 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 20:13:21.510 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 20:13:21.553 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 20:13:21.591 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 20:13:21.593 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 20:13:21.603 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 20:13:21.686 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 20:13:21.726 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:13:21.745 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 20:13:21.746 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 20:13:21.755 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 20:13:21.756 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 20:13:21.757 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 20:13:21.759 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751566401758 with initial instances count: 0
2025-07-03 20:13:21.762 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 20:13:21.762 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566401762, current=UP, previous=STARTING]
2025-07-03 20:13:21.763 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:13:21.763 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 20:13:21.765 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:13:21.765 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:13:21.771 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 20:13:21.771 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 20:13:21.772 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 20:13:21.781 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:13:21.781 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:13:21.797 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 20:13:21.800 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 20:13:21.839 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 20:13:21.839 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 20:13:21.839 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751566401839
2025-07-03 20:13:21.840 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 20:13:21.840 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 20:13:21.844 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:13:21.850 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.76 seconds (process running for 2.964)
2025-07-03 20:13:21.853 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 20:13:21.884 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 20:13:21.903 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 20:13:21.903 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 20:13:22.006 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:13:22.006 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: 6GMEXh7pTqeJcNcrKrP5hg
2025-07-03 20:13:22.417 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 20:13:22.419 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:13:22.432 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-00b6a4c7-5acc-4239-bf2d-8a5cc2c48ee3
2025-07-03 20:13:22.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 20:13:22.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:13:22.445 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-00b6a4c7-5acc-4239-bf2d-8a5cc2c48ee3', protocol='range'}
2025-07-03 20:13:22.447 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-00b6a4c7-5acc-4239-bf2d-8a5cc2c48ee3=Assignment(partitions=[subscription-created-0])}
2025-07-03 20:13:22.480 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-00b6a4c7-5acc-4239-bf2d-8a5cc2c48ee3', protocol='range'}
2025-07-03 20:13:22.480 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 20:13:22.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 20:13:22.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 20:13:22.489 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5901caf8
2025-07-03 20:13:22.490 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 20:13:22.490 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 20:13:22.490 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 20:13:22.494 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 20:13:22.495 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 20:13:22.496 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 20:13:22.505 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 20:13:22.515 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 20:13:22.532 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@4f31cb58]
2025-07-03 20:13:22.539 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 20:13:23.750 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 20:13:23.750 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566403750, current=DOWN, previous=UP]
2025-07-03 20:13:23.750 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:13:23.751 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:13:23.751 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:13:23.751 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-00b6a4c7-5acc-4239-bf2d-8a5cc2c48ee3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 20:13:23.753 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:13:23.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:13:23.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 20:13:23.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:13:23.755 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:13:23.755 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:13:23.755 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:13:24.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 20:13:24.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 20:13:24.048 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 20:13:24.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 20:13:24.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 20:13:24.050 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 20:13:24.050 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 20:13:25.057 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:13:25.058 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 20:13:25.058 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 20:13:25.059 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 20:13:28.065 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 20:13:28.066 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:13:28.066 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:13:28.068 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:13:28.068 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:13:28.069 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:13:28.069 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:13:28.069 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:13:28.069 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:13:28.069 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:13:28.071 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 20:15:21.687 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 73300 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 20:15:21.688 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 20:15:21.688 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 20:15:22.015 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 20:15:22.072 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2025-07-03 20:15:22.152 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 20:15:22.261 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 20:15:22.263 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 20:15:22.356 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 20:15:22.360 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 20:15:22.360 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 20:15:22.360 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 20:15:22.382 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 20:15:22.382 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 673 ms
2025-07-03 20:15:22.455 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 20:15:22.498 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 20:15:22.516 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 20:15:22.527 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 20:15:22.600 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 20:15:22.609 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 20:15:22.664 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4742466e
2025-07-03 20:15:22.664 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 20:15:22.690 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 20:15:22.945 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 20:15:22.990 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:15:23.205 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 20:15:23.384 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 20:15:23.392 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 20:15:23.429 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 20:15:23.466 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 20:15:23.510 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 20:15:23.526 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 20:15:23.540 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 20:15:23.693 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 20:15:23.714 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 20:15:23.718 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 20:15:23.756 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 20:15:23.793 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 20:15:23.795 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 20:15:23.803 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 20:15:23.803 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 20:15:23.803 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 20:15:23.804 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 20:15:23.804 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 20:15:23.804 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 20:15:23.804 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 20:15:23.868 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 20:15:23.900 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:15:23.919 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 20:15:23.920 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 20:15:23.927 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 20:15:23.927 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 20:15:23.928 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 20:15:23.929 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751566523929 with initial instances count: 0
2025-07-03 20:15:23.932 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 20:15:23.932 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566523932, current=UP, previous=STARTING]
2025-07-03 20:15:23.932 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:15:23.932 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 20:15:23.933 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:15:23.934 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:15:23.938 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 20:15:23.938 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 20:15:23.938 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@f67053] as "application/json"
2025-07-03 20:15:23.948 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:15:23.948 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:15:23.957 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 20:15:23.959 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 20:15:23.989 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 20:15:23.989 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 20:15:23.989 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751566523989
2025-07-03 20:15:23.990 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 20:15:23.991 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 20:15:23.994 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:15:24.000 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.474 seconds (process running for 2.656)
2025-07-03 20:15:24.003 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 20:15:24.033 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 20:15:24.053 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 20:15:24.053 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 20:15:24.138 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:15:24.138 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: N_OS3-TRSb2nrFf379Gzlw
2025-07-03 20:15:24.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 20:15:24.453 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:15:24.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-abdbf302-50db-49ff-9b39-6d15e426098f
2025-07-03 20:15:24.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 20:15:24.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:15:24.477 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-abdbf302-50db-49ff-9b39-6d15e426098f', protocol='range'}
2025-07-03 20:15:24.482 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-abdbf302-50db-49ff-9b39-6d15e426098f=Assignment(partitions=[subscription-created-0])}
2025-07-03 20:15:24.512 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-abdbf302-50db-49ff-9b39-6d15e426098f', protocol='range'}
2025-07-03 20:15:24.512 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 20:15:24.513 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 20:15:24.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 20:15:24.526 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 20:15:24.527 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 20:15:25.109 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 20:15:25.109 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 20:15:25.109 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 20:15:25.109 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 20:15:25.109 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 20:15:25.110 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6b021959
2025-07-03 20:15:25.110 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@54b2416d
2025-07-03 20:15:25.110 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 20:15:25.110 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 20:15:25.115 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 20:15:25.121 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 20:15:25.130 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 20:15:25.143 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@14fb0142]
2025-07-03 20:15:25.149 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 20:15:26.107 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 20:15:26.107 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751566526107, current=DOWN, previous=UP]
2025-07-03 20:15:26.108 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:15:26.108 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:15:26.108 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:15:26.108 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@f67053] as "application/json"
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-abdbf302-50db-49ff-9b39-6d15e426098f sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:15:26.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 20:15:26.112 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:15:26.112 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:15:26.114 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:15:26.115 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:15:26.585 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 20:15:26.586 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 20:15:26.586 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 20:15:26.590 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 20:15:26.591 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 20:15:26.591 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 20:15:26.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 20:15:27.609 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:15:27.611 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 20:15:27.611 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 20:15:27.612 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 20:15:30.619 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 20:15:30.621 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:15:30.622 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:15:30.628 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:15:30.628 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:15:30.630 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:15:30.630 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:15:30.630 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:15:30.630 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:15:30.630 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:15:30.632 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 20:24:08.984 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 76586 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 20:24:08.993 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 20:24:08.993 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 20:24:09.584 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 20:24:09.678 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 1 JPA repository interface.
2025-07-03 20:24:09.789 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 20:24:09.946 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 20:24:09.948 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 20:24:10.068 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 20:24:10.072 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 20:24:10.073 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 20:24:10.073 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 20:24:10.100 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 20:24:10.101 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1087 ms
2025-07-03 20:24:10.190 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 20:24:10.261 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 20:24:10.296 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 20:24:10.320 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 20:24:10.470 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 20:24:10.483 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 20:24:10.551 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a45ca1c
2025-07-03 20:24:10.551 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 20:24:10.593 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 20:24:11.006 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 20:24:11.156 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:24:11.432 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 20:24:11.637 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 20:24:11.650 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 20:24:11.698 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 20:24:11.745 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 20:24:11.795 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 20:24:11.811 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 20:24:11.831 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 20:24:12.014 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 20:24:12.046 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 20:24:12.050 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 20:24:12.116 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 20:24:12.188 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 20:24:12.190 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 20:24:12.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 20:24:12.306 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 20:24:12.342 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:24:12.390 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 20:24:12.394 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 20:24:12.406 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 20:24:12.406 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 20:24:12.407 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 20:24:12.409 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751567052409 with initial instances count: 0
2025-07-03 20:24:12.411 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 20:24:12.412 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751567052412, current=UP, previous=STARTING]
2025-07-03 20:24:12.412 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 20:24:12.412 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:24:12.414 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:24:12.417 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:24:12.421 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 20:24:12.421 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 20:24:12.422 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4805d11b] as "application/json"
2025-07-03 20:24:12.432 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:24:12.432 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:24:12.472 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 20:24:12.481 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 20:24:12.544 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 20:24:12.544 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 20:24:12.544 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751567052544
2025-07-03 20:24:12.545 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 20:24:12.546 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 20:24:12.554 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:24:12.560 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 3.754 seconds (process running for 3.972)
2025-07-03 20:24:12.566 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 20:24:12.619 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 20:24:12.653 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 20:24:12.654 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 20:24:12.812 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:24:12.812 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: sXy82CvtS9mHOTEEQDErNw
2025-07-03 20:24:12.918 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 4 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 20:24:13.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 20:24:13.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:24:13.143 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-91d9084b-f05e-4eaf-af5b-cc8112048c47
2025-07-03 20:24:13.144 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 20:24:13.144 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 20:24:13.158 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-91d9084b-f05e-4eaf-af5b-cc8112048c47', protocol='range'}
2025-07-03 20:24:13.161 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-91d9084b-f05e-4eaf-af5b-cc8112048c47=Assignment(partitions=[subscription-created-0])}
2025-07-03 20:24:13.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-91d9084b-f05e-4eaf-af5b-cc8112048c47', protocol='range'}
2025-07-03 20:24:13.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 20:24:13.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 20:24:13.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 20:24:13.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 20:24:13.205 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 20:24:14.201 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 20:24:14.201 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@462c68b3
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@615c9e9b
2025-07-03 20:24:14.202 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 20:24:14.203 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 20:24:14.208 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 20:24:14.217 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 20:24:14.227 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 20:24:14.244 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@14c02380]
2025-07-03 20:24:14.251 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 20:24:15.455 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 20:24:15.455 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751567055455, current=DOWN, previous=UP]
2025-07-03 20:24:15.455 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 20:24:15.456 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 20:24:15.456 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:24:15.456 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4805d11b] as "application/json"
2025-07-03 20:24:15.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:24:15.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 20:24:15.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 20:24:15.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 20:24:15.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-91d9084b-f05e-4eaf-af5b-cc8112048c47 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 20:24:15.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:24:15.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:24:15.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 20:24:15.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 20:24:15.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 20:24:15.463 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 20:24:15.464 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 20:24:15.782 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 20:24:15.782 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 20:24:15.782 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 20:24:15.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 20:24:15.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 20:24:15.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 20:24:15.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 20:24:15.791 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 20:24:15.792 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 20:24:15.793 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 20:24:15.793 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 20:24:18.799 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 20:24:18.800 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:24:18.800 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:24:18.803 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:24:18.804 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:24:18.806 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 20:24:18.807 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 20:24:18.807 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 20:24:18.807 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 20:24:18.807 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 20:24:18.810 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 21:54:21.792 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 12761 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 21:54:21.793 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 21:54:21.794 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 21:54:22.141 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 21:54:22.198 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2025-07-03 21:54:22.288 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 21:54:22.407 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 21:54:22.408 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 21:54:22.511 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 21:54:22.515 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 21:54:22.515 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 21:54:22.516 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 21:54:22.540 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 21:54:22.540 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
2025-07-03 21:54:22.618 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 21:54:22.666 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 21:54:22.684 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 21:54:22.695 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 21:54:22.779 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 21:54:22.788 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 21:54:22.849 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 21:54:22.850 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 21:54:22.873 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 21:54:23.139 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 21:54:23.182 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 21:54:23.413 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 21:54:23.596 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 21:54:23.604 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 21:54:23.645 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 21:54:23.688 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 21:54:23.737 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 21:54:23.754 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 21:54:23.769 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 21:54:23.944 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 21:54:23.967 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 21:54:23.971 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 21:54:24.013 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 21:54:24.049 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 21:54:24.051 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 21:54:24.059 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 21:54:24.059 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 21:54:24.059 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 21:54:24.060 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 21:54:24.060 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 21:54:24.060 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 21:54:24.060 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 21:54:24.128 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 21:54:24.164 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:54:24.189 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:54:24.190 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 21:54:24.202 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 21:54:24.203 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 21:54:24.203 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 21:54:24.205 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751572464204 with initial instances count: 1
2025-07-03 21:54:24.207 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 21:54:24.208 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751572464208, current=UP, previous=STARTING]
2025-07-03 21:54:24.208 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 21:54:24.209 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 21:54:24.210 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 21:54:24.211 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:54:24.214 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 21:54:24.214 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 21:54:24.215 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4cf2b47a] as "application/json"
2025-07-03 21:54:24.224 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 21:54:24.224 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 21:54:24.232 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 21:54:24.234 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 21:54:24.264 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 21:54:24.264 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 21:54:24.264 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751572464263
2025-07-03 21:54:24.264 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 21:54:24.265 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 21:54:24.268 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:24.274 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.677 seconds (process running for 2.887)
2025-07-03 21:54:24.277 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 21:54:24.307 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 21:54:24.316 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 21:54:24.316 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 21:54:24.339 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:24.340 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:24.340 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:24.441 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:24.441 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:24.441 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:24.594 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:24.594 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:24.594 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:24.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:24.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:24.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:25.154 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:25.154 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:25.154 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:25.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:25.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:25.872 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:26.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:26.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:26.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:28.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:28.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:28.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:29.185 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:29.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:29.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:29.271 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:29.272 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:30.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:30.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:30.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:31.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:31.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:31.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:32.606 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:32.606 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:32.606 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:33.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:33.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:33.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:34.273 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:34.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:34.734 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:34.735 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:34.735 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:35.908 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:35.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:35.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:36.826 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:36.826 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:36.826 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:37.793 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:37.794 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:37.794 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:38.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:38.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:38.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:39.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:39.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:39.835 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:39.835 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:39.835 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:40.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:40.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:40.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:42.180 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:42.181 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:42.181 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:43.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:43.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:43.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:44.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:44.277 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:44.581 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:44.582 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:44.582 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:45.447 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:45.448 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:45.448 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:46.313 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:46.313 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:46.313 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:47.052 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 21:54:47.052 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 21:54:47.052 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 21:54:47.052 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 21:54:47.052 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 21:54:47.053 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6a82d4b4
2025-07-03 21:54:47.053 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 21:54:47.053 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 21:54:47.053 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 21:54:47.059 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 21:54:47.068 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 21:54:47.078 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 21:54:47.095 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@384a17ac]
2025-07-03 21:54:47.108 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 21:54:47.534 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:47.534 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:47.534 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:48.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:48.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:48.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:49.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:49.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:49.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:49.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:49.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:50.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:50.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:50.604 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:51.620 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:51.620 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 21:54:51.620 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:52.597 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:52.598 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 1 due to node -1 being disconnected (elapsed time since creation: 11ms, elapsed time since send: 11ms, request timeout: 30000ms)
2025-07-03 21:54:52.598 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:53.462 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:53.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node -1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 21:54:53.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:54.207 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 21:54:54.208 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751572464208
2025-07-03 21:54:54.208 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:54:54.212 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:54:54.212 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:54:54.212 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 21:54:54.215 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:54:54.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:54.279 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:54:54.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 21:54:54.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 3 due to node -1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-03 21:54:54.331 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 21:54:55.432 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: OLmb_69bQzuJ2Nl-Zwf-mw
2025-07-03 21:54:55.439 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 21:54:55.440 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 21:54:55.451 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-38ee0931-e285-49dd-bde8-99ef3f036781
2025-07-03 21:54:55.451 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 21:54:55.451 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 21:54:55.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-subscription-manager-group-1-38ee0931-e285-49dd-bde8-99ef3f036781', protocol='range'}
2025-07-03 21:54:55.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 3: {consumer-subscription-manager-group-1-38ee0931-e285-49dd-bde8-99ef3f036781=Assignment(partitions=[subscription-created-0])}
2025-07-03 21:54:55.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-subscription-manager-group-1-38ee0931-e285-49dd-bde8-99ef3f036781', protocol='range'}
2025-07-03 21:54:55.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 21:54:55.482 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 21:54:55.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 21:54:55.493 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 21:54:55.493 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 21:54:59.280 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:54:59.282 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:04.283 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:04.283 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:09.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:09.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:14.286 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:14.286 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:19.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:19.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:24.219 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751572464208
2025-07-03 21:55:24.220 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 21:55:24.221 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:55:24.222 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:55:24.230 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:55:24.230 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:55:24.230 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 21:55:24.289 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:24.289 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:29.290 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:29.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:34.294 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:34.295 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:39.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:39.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:44.297 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:44.297 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:49.297 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:49.298 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:54.237 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP PUT http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000?status=UP&lastDirtyTimestamp=1751572464208
2025-07-03 21:55:54.237 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/delta
2025-07-03 21:55:54.241 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:55:54.241 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:55:54.253 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:55:54.253 [DiscoveryClient-HeartbeatExecutor-0] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 21:55:54.253 [DiscoveryClient-CacheRefreshExecutor-0] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 21:55:54.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Received: 0 records
2025-07-03 21:55:54.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:58.982 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 21:55:58.983 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751572558982, current=DOWN, previous=UP]
2025-07-03 21:55:58.983 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 21:55:58.983 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 21:55:58.984 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:55:58.984 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4cf2b47a] as "application/json"
2025-07-03 21:55:59.033 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 21:55:59.034 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 21:55:59.036 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:59.037 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 21:55:59.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 21:55:59.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 21:55:59.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-38ee0931-e285-49dd-bde8-99ef3f036781 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 21:55:59.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 21:55:59.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 21:55:59.039 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 21:55:59.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 21:55:59.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 21:55:59.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 21:55:59.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 21:55:59.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 21:55:59.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 21:55:59.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 21:55:59.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 21:55:59.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 21:55:59.295 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 21:55:59.297 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 21:55:59.298 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 21:55:59.298 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 21:56:02.303 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 21:56:02.304 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 21:56:02.304 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:56:02.306 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 21:56:02.306 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 21:56:02.307 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 21:56:02.307 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 21:56:02.308 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 21:56:02.308 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 21:56:02.308 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 21:56:02.313 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 22:40:29.448 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 28357 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 22:40:29.449 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 22:40:29.449 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 22:40:29.774 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 22:40:29.828 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interface.
2025-07-03 22:40:29.916 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 22:40:30.030 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 22:40:30.031 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 22:40:30.127 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 22:40:30.131 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 22:40:30.132 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 22:40:30.132 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 22:40:30.154 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 22:40:30.154 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 688 ms
2025-07-03 22:40:30.226 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 22:40:30.272 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 22:40:30.293 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 22:40:30.304 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 22:40:30.379 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 22:40:30.390 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 22:40:30.450 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4742466e
2025-07-03 22:40:30.450 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 22:40:30.475 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 22:40:30.752 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 22:40:30.793 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 22:40:31.044 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 22:40:31.233 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 22:40:31.243 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="kafkaListenerContainerFactory", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 22:40:31.285 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 22:40:31.331 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 22:40:31.382 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 22:40:31.404 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 22:40:31.428 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 22:40:31.658 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 22:40:31.692 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 22:40:31.696 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 22:40:31.756 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 22:40:31.797 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 22:40:31.799 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 22:40:31.808 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 22:40:31.879 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 22:40:31.916 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:40:31.938 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 22:40:31.939 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 22:40:31.950 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 22:40:31.950 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 22:40:31.951 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 22:40:31.953 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751575231952 with initial instances count: 1
2025-07-03 22:40:31.955 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 22:40:31.955 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751575231955, current=UP, previous=STARTING]
2025-07-03 22:40:31.956 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 22:40:31.956 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 22:40:31.957 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 22:40:31.958 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:40:31.961 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 22:40:31.962 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 22:40:31.963 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@46a6368f] as "application/json"
2025-07-03 22:40:31.973 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 22:40:31.974 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 22:40:31.984 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 22:40:31.987 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 22:40:31.991 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 22:40:31.991 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 22:40:31.991 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 22:40:31.991 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 22:40:31.991 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 22:40:31.992 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3107833
2025-07-03 22:40:31.992 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@615c9e9b
2025-07-03 22:40:31.992 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 22:40:31.992 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 22:40:31.998 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:32.003 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:32.004 [http-nio-3000-exec-1] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:32.005 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:32.008 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:32.008 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:32.008 [http-nio-3000-exec-2] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:32.008 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:32.009 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:32.009 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:32.009 [http-nio-3000-exec-3] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:32.009 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:32.010 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:32.010 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:32.011 [http-nio-3000-exec-4] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:32.011 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:32.024 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 22:40:32.024 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 22:40:32.024 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751575232024
2025-07-03 22:40:32.025 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 22:40:32.025 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 22:40:32.028 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:40:32.035 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.739 seconds (process running for 2.937)
2025-07-03 22:40:32.037 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 22:40:32.067 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 22:40:32.087 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 22:40:32.087 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 22:40:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 22:40:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: 4Z32IIUdS06SyWfyRnweZQ
2025-07-03 22:40:32.300 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 4 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 22:40:32.507 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 22:40:32.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 22:40:32.523 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 22:40:32.528 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-d85b9ac0-5750-4b0e-be05-5710080c7077
2025-07-03 22:40:32.528 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 22:40:32.528 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 22:40:32.530 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 22:40:32.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-d85b9ac0-5750-4b0e-be05-5710080c7077', protocol='range'}
2025-07-03 22:40:32.540 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 22:40:32.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-d85b9ac0-5750-4b0e-be05-5710080c7077=Assignment(partitions=[subscription-created-0])}
2025-07-03 22:40:32.558 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@528e73e3]
2025-07-03 22:40:32.564 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 22:40:32.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-d85b9ac0-5750-4b0e-be05-5710080c7077', protocol='range'}
2025-07-03 22:40:32.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 22:40:32.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 22:40:32.577 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 22:40:32.591 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 22:40:32.591 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 22:40:33.153 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.154 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.155 [http-nio-3000-exec-8] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.155 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.156 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.157 [http-nio-3000-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.157 [http-nio-3000-exec-9] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.157 [http-nio-3000-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.172 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.173 [http-nio-3000-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.173 [http-nio-3000-exec-10] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.174 [http-nio-3000-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.335 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.340 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.341 [http-nio-3000-exec-1] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.341 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.344 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.346 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.388 [http-nio-3000-exec-1] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.389 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.402 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.405 [http-nio-3000-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.406 [http-nio-3000-exec-2] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.406 [http-nio-3000-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.581 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.581 [http-nio-3000-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.581 [http-nio-3000-exec-3] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.582 [http-nio-3000-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.582 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.583 [http-nio-3000-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.583 [http-nio-3000-exec-4] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.583 [http-nio-3000-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.589 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.589 [http-nio-3000-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.589 [http-nio-3000-exec-5] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.590 [http-nio-3000-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.590 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.591 [http-nio-3000-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.591 [http-nio-3000-exec-6] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.591 [http-nio-3000-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.605 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.605 [http-nio-3000-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.606 [http-nio-3000-exec-7] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.606 [http-nio-3000-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:33.606 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/subscriptions", parameters={}
2025-07-03 22:40:33.606 [http-nio-3000-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.github.rezaiyan.subscriptionmanager.SubscriptionController#getAllSubscriptions()
2025-07-03 22:40:33.606 [http-nio-3000-exec-8] DEBUG o.s.web.cors.DefaultCorsProcessor - Reject: 'http://localhost:8081' origin is not allowed
2025-07-03 22:40:33.607 [http-nio-3000-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-07-03 22:40:34.396 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 22:40:34.397 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751575234397, current=DOWN, previous=UP]
2025-07-03 22:40:34.397 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 22:40:34.397 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 22:40:34.399 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:40:34.399 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@46a6368f] as "application/json"
2025-07-03 22:40:34.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:40:34.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 22:40:34.405 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 22:40:34.405 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:40:34.405 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-d85b9ac0-5750-4b0e-be05-5710080c7077 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 22:40:34.406 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 22:40:34.406 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 22:40:34.406 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 22:40:34.407 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 22:40:34.407 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 22:40:34.408 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:301)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-07-03 22:40:34.408 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
2025-07-03 22:40:34.410 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 22:40:34.411 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:40:34.420 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@46a6368f] as "application/json"
2025-07-03 22:40:34.649 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 22:40:34.649 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 22:40:34.649 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 22:40:34.651 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 22:40:34.651 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 22:40:34.651 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 22:40:34.652 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 22:40:35.387 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connection reset stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connection reset
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1109)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:149)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:247)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:54)
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:299)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 22:40:35.387 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connection reset
2025-07-03 22:40:35.387 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 22:40:35.388 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 22:40:35.661 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 22:40:35.663 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 22:40:35.665 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 22:40:35.665 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 22:40:38.670 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 22:40:38.674 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 22:40:38.675 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:40:38.676 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 22:40:38.676 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 22:40:38.677 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 22:40:38.679 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 22:42:45.434 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 29238 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 22:42:45.435 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 22:42:45.435 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 22:42:45.738 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 22:42:45.784 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interface.
2025-07-03 22:42:45.861 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 22:42:45.965 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 22:42:45.966 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 22:42:46.057 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 22:42:46.060 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 22:42:46.061 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 22:42:46.061 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 22:42:46.082 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 22:42:46.082 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 630 ms
2025-07-03 22:42:46.152 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 22:42:46.193 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 22:42:46.209 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 22:42:46.218 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 22:42:46.284 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 22:42:46.292 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 22:42:46.340 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 22:42:46.341 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 22:42:46.360 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 22:42:46.594 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 22:42:46.636 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 22:42:46.844 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 22:42:47.020 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 22:42:47.028 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", containerFactory="kafkaListenerContainerFactory", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-07-03 22:42:47.063 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 22:42:47.102 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 22:42:47.146 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 22:42:47.162 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 22:42:47.177 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 22:42:47.319 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 22:42:47.339 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 22:42:47.343 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 22:42:47.382 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 22:42:47.414 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 22:42:47.415 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 22:42:47.423 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 22:42:47.483 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 22:42:47.516 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:42:47.537 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 22:42:47.538 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 22:42:47.545 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 22:42:47.546 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 22:42:47.546 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 22:42:47.548 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751575367547 with initial instances count: 0
2025-07-03 22:42:47.550 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 22:42:47.550 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751575367550, current=UP, previous=STARTING]
2025-07-03 22:42:47.550 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 22:42:47.551 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 22:42:47.552 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 22:42:47.552 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:42:47.555 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 22:42:47.555 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 22:42:47.556 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7f05d2bf] as "application/json"
2025-07-03 22:42:47.567 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 22:42:47.567 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 22:42:47.575 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 22:42:47.577 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 22:42:47.607 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 22:42:47.607 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 22:42:47.607 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751575367607
2025-07-03 22:42:47.608 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 22:42:47.608 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 22:42:47.611 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:42:47.618 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.327 seconds (process running for 2.5)
2025-07-03 22:42:47.620 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 22:42:47.652 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 22:42:47.671 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 22:42:47.671 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 22:42:47.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 22:42:47.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: pRSSdohJToWjK_jty7AeGw
2025-07-03 22:42:48.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 22:42:48.054 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 22:42:48.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-c541f36f-35b6-4eaf-b49b-b02aa7f5a413
2025-07-03 22:42:48.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 22:42:48.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 22:42:48.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-c541f36f-35b6-4eaf-b49b-b02aa7f5a413', protocol='range'}
2025-07-03 22:42:48.081 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-c541f36f-35b6-4eaf-b49b-b02aa7f5a413=Assignment(partitions=[subscription-created-0])}
2025-07-03 22:42:48.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-c541f36f-35b6-4eaf-b49b-b02aa7f5a413', protocol='range'}
2025-07-03 22:42:48.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 22:42:48.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 22:42:48.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 22:42:48.116 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 22:42:48.116 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 22:42:49.094 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5084cf1c
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 22:42:49.095 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 22:42:49.096 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 22:42:49.103 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 22:42:49.112 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 22:42:49.120 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 22:42:49.133 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@77b124d1]
2025-07-03 22:42:49.139 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 22:42:50.105 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 22:42:50.105 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751575370105, current=DOWN, previous=UP]
2025-07-03 22:42:50.105 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 22:42:50.106 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 22:42:50.106 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:42:50.106 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7f05d2bf] as "application/json"
2025-07-03 22:42:50.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:42:50.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 22:42:50.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 22:42:50.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 22:42:50.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-c541f36f-35b6-4eaf-b49b-b02aa7f5a413 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 22:42:50.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 22:42:50.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 22:42:50.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 22:42:50.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 22:42:50.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 22:42:50.113 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 22:42:50.113 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 22:42:50.166 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 22:42:50.166 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 22:42:50.166 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 22:42:50.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 22:42:50.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 22:42:50.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 22:42:50.170 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 22:42:50.185 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 22:42:50.186 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 22:42:50.187 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 22:42:50.187 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 22:42:53.193 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 22:42:53.193 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 22:42:53.193 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:42:53.195 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 22:42:53.195 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 22:42:53.197 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 22:42:53.197 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 22:42:53.198 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 22:42:53.198 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 22:42:53.198 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 22:42:53.202 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 23:12:56.361 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 34959 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 23:12:56.362 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 23:12:56.362 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 23:12:56.707 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 23:12:56.768 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 1 JPA repository interface.
2025-07-03 23:12:56.856 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 23:12:56.976 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 23:12:56.978 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 23:12:57.093 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 23:12:57.098 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 23:12:57.099 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 23:12:57.099 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 23:12:57.124 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 23:12:57.124 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 745 ms
2025-07-03 23:12:57.202 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 23:12:57.253 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 23:12:57.274 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 23:12:57.288 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 23:12:57.370 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 23:12:57.380 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 23:12:57.437 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 23:12:57.438 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 23:12:57.461 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 23:12:57.738 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 23:12:57.784 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:12:58.017 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 23:12:58.202 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 23:12:58.212 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 23:12:58.251 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 23:12:58.297 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 23:12:58.346 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 23:12:58.363 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 23:12:58.378 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 23:12:58.541 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 23:12:58.564 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 23:12:58.568 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 23:12:58.610 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 23:12:58.648 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 23:12:58.649 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 23:12:58.658 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 23:12:58.732 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 23:12:58.767 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:12:58.792 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 23:12:58.793 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 23:12:58.801 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 23:12:58.801 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 23:12:58.802 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 23:12:58.804 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751577178804 with initial instances count: 0
2025-07-03 23:12:58.806 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 23:12:58.807 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751577178807, current=UP, previous=STARTING]
2025-07-03 23:12:58.807 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:12:58.807 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 23:12:58.808 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:12:58.809 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:12:58.812 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 23:12:58.813 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 23:12:58.813 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 23:12:58.825 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:12:58.825 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:12:58.853 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 23:12:58.855 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 23:12:58.888 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 23:12:58.888 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 23:12:58.888 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751577178888
2025-07-03 23:12:58.889 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 23:12:58.889 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 23:12:58.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:12:58.899 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.671 seconds (process running for 2.872)
2025-07-03 23:12:58.901 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 23:12:58.932 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 23:12:58.957 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 23:12:58.957 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 23:12:58.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:12:58.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:12:58.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:12:59.031 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 23:12:59.031 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 23:12:59.031 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 23:12:59.031 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 23:12:59.031 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 23:12:59.032 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@536905ed
2025-07-03 23:12:59.032 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 23:12:59.032 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 23:12:59.032 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 23:12:59.037 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 23:12:59.044 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 23:12:59.053 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 23:12:59.069 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@46ff5413]
2025-07-03 23:12:59.075 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 23:12:59.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:12:59.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:12:59.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:12:59.227 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:12:59.227 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:12:59.228 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:12:59.480 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:12:59.480 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:12:59.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:12:59.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:12:59.888 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:12:59.888 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:13:00.325 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 23:13:00.325 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751577180325, current=DOWN, previous=UP]
2025-07-03 23:13:00.325 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:13:00.325 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:13:00.326 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:13:00.326 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 23:13:00.328 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:301)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-07-03 23:13:00.328 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
2025-07-03 23:13:00.329 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:13:00.330 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:13:00.329 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:13:00.330 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:13:00.330 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:13:00.330 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 23:13:00.331 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@69f564ab] as "application/json"
2025-07-03 23:13:00.332 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:13:00.332 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:13:00.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 23:13:00.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 23:13:00.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 23:13:00.336 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 23:13:00.336 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 23:13:00.336 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 23:13:00.336 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 23:13:00.336 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 23:13:00.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 23:13:00.336 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:13:00.338 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:13:00.350 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:13:00.352 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 23:13:00.354 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 23:13:00.356 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 23:13:03.357 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 23:13:03.361 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:13:03.362 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:13:03.363 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:13:03.363 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:13:03.363 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:13:03.365 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 23:27:29.123 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 43146 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 23:27:29.125 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 23:27:29.125 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 23:27:29.478 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 23:27:29.542 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2025-07-03 23:27:29.632 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 23:27:29.753 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 23:27:29.755 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 23:27:29.861 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 23:27:29.865 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 23:27:29.866 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 23:27:29.866 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 23:27:29.890 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 23:27:29.891 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 747 ms
2025-07-03 23:27:29.969 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 23:27:30.020 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 23:27:30.041 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 23:27:30.053 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 23:27:30.136 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 23:27:30.146 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 23:27:30.201 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 23:27:30.201 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 23:27:30.226 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 23:27:30.501 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 23:27:30.548 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:27:30.785 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 23:27:30.972 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 23:27:30.980 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 23:27:31.020 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 23:27:31.064 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 23:27:31.114 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 23:27:31.131 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 23:27:31.148 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 23:27:31.317 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 23:27:31.341 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 23:27:31.344 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 23:27:31.387 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 23:27:31.425 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 23:27:31.427 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 23:27:31.436 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 23:27:31.437 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 23:27:31.510 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 23:27:31.548 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:27:31.568 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 23:27:31.569 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 23:27:31.580 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 23:27:31.581 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 23:27:31.582 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 23:27:31.583 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751578051583 with initial instances count: 1
2025-07-03 23:27:31.586 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 23:27:31.586 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578051586, current=UP, previous=STARTING]
2025-07-03 23:27:31.586 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 23:27:31.586 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:27:31.588 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:27:31.589 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:27:31.591 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 23:27:31.592 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 23:27:31.593 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 23:27:31.600 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:27:31.601 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:27:31.613 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 23:27:31.615 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 23:27:31.654 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 23:27:31.654 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 23:27:31.654 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751578051654
2025-07-03 23:27:31.655 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 23:27:31.656 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 23:27:31.661 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:27:31.669 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.706 seconds (process running for 2.906)
2025-07-03 23:27:31.671 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 23:27:31.709 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 23:27:31.724 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 23:27:31.725 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 23:27:31.834 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Error while fetching metadata with correlation id 2 : {subscription-created=LEADER_NOT_AVAILABLE}
2025-07-03 23:27:31.835 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cluster ID: adh96h7KQgGwW84EqmRwqw
2025-07-03 23:27:32.147 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-07-03 23:27:32.149 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 23:27:32.162 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: need to re-join with the given member-id: consumer-subscription-manager-group-1-9d766bff-5ae2-48d8-a596-11da252afd05
2025-07-03 23:27:32.163 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-07-03 23:27:32.163 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] (Re-)joining group
2025-07-03 23:27:32.173 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-9d766bff-5ae2-48d8-a596-11da252afd05', protocol='range'}
2025-07-03 23:27:32.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Finished assignment for group at generation 1: {consumer-subscription-manager-group-1-9d766bff-5ae2-48d8-a596-11da252afd05=Assignment(partitions=[subscription-created-0])}
2025-07-03 23:27:32.203 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-subscription-manager-group-1-9d766bff-5ae2-48d8-a596-11da252afd05', protocol='range'}
2025-07-03 23:27:32.203 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Notifying assignor about the new Assignment(partitions=[subscription-created-0])
2025-07-03 23:27:32.204 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Adding newly assigned partitions: subscription-created-0
2025-07-03 23:27:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Found no committed offset for partition subscription-created-0
2025-07-03 23:27:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting offset for partition subscription-created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-07-03 23:27:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions assigned: [subscription-created-0]
2025-07-03 23:27:32.356 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 23:27:32.356 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 23:27:32.356 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 23:27:32.356 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 23:27:32.356 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 23:27:32.357 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5901caf8
2025-07-03 23:27:32.357 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 23:27:32.357 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 23:27:32.357 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 23:27:32.363 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 23:27:32.373 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 23:27:32.384 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 23:27:32.403 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@440a4eac]
2025-07-03 23:27:32.411 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 23:27:33.418 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 23:27:33.418 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578053418, current=DOWN, previous=UP]
2025-07-03 23:27:33.418 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:27:33.419 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:27:33.419 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:27:33.419 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 23:27:33.421 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:301)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-07-03 23:27:33.422 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": localhost:8761 failed to respond
2025-07-03 23:27:33.423 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:27:33.423 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:27:33.424 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:27:33.425 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 23:27:33.427 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Revoke previously assigned partitions subscription-created-0
2025-07-03 23:27:33.428 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: partitions revoked: [subscription-created-0]
2025-07-03 23:27:33.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:27:33.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Member consumer-subscription-manager-group-1-9d766bff-5ae2-48d8-a596-11da252afd05 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-07-03 23:27:33.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:27:33.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:27:33.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 23:27:33.430 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:27:33.430 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:27:33.431 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:757)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-07-03 23:27:33.431 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-07-03 23:27:33.431 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:27:33.432 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:27:33.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 23:27:33.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 23:27:33.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 23:27:33.765 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 23:27:33.765 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 23:27:33.765 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 23:27:33.766 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 23:27:33.810 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:27:33.813 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 23:27:33.814 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 23:27:33.814 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 23:27:36.817 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 23:27:36.819 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:27:36.820 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:27:36.821 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:27:36.821 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:27:36.821 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:27:36.823 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 23:29:32.703 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 44252 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 23:29:32.704 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 23:29:32.705 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 23:29:33.062 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 23:29:33.125 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2025-07-03 23:29:33.216 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 23:29:33.339 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 23:29:33.340 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 23:29:33.443 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 23:29:33.447 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 23:29:33.448 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 23:29:33.448 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 23:29:33.472 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 23:29:33.473 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 749 ms
2025-07-03 23:29:33.551 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 23:29:33.600 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 23:29:33.621 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 23:29:33.633 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 23:29:33.715 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 23:29:33.725 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 23:29:33.780 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18dafd3b
2025-07-03 23:29:33.781 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 23:29:33.805 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 23:29:34.078 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 23:29:34.120 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:29:34.354 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 23:29:34.539 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 23:29:34.547 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 23:29:34.588 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 23:29:34.631 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 23:29:34.679 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 23:29:34.696 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 23:29:34.713 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 23:29:34.884 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 23:29:34.908 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 23:29:34.911 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 23:29:34.954 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 23:29:34.992 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 23:29:34.993 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 23:29:35.002 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 23:29:35.002 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 23:29:35.002 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 23:29:35.002 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 23:29:35.003 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 23:29:35.003 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 23:29:35.003 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 23:29:35.081 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 23:29:35.121 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:29:35.139 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 23:29:35.140 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 23:29:35.151 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 23:29:35.152 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 23:29:35.153 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 23:29:35.155 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751578175154 with initial instances count: 1
2025-07-03 23:29:35.157 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 23:29:35.157 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578175157, current=UP, previous=STARTING]
2025-07-03 23:29:35.158 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:29:35.158 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 23:29:35.159 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:29:35.160 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:29:35.164 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 23:29:35.164 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 23:29:35.165 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 23:29:35.172 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:29:35.172 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:29:35.186 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 23:29:35.188 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 23:29:35.222 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 23:29:35.223 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 23:29:35.223 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751578175222
2025-07-03 23:29:35.223 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 23:29:35.224 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 23:29:35.227 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:29:35.234 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.692 seconds (process running for 2.895)
2025-07-03 23:29:35.236 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 23:29:35.269 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 23:29:35.279 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 23:29:35.279 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 23:29:35.312 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:35.312 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:29:35.313 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:35.414 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:35.414 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:29:35.414 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:35.567 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:35.567 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:29:35.567 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:35.821 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:35.821 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:29:35.821 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:35.997 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 23:29:35.998 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 23:29:35.998 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 23:29:35.998 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 23:29:35.998 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 23:29:35.999 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5901caf8
2025-07-03 23:29:35.999 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f5faa89
2025-07-03 23:29:35.999 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 23:29:35.999 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 23:29:36.004 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 23:29:36.016 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 23:29:36.026 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 23:29:36.042 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@1092222e]
2025-07-03 23:29:36.049 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 23:29:36.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:36.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:29:36.177 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:36.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:29:36.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 1 due to node -1 being disconnected (elapsed time since creation: 11ms, elapsed time since send: 11ms, request timeout: 30000ms)
2025-07-03 23:29:36.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:29:37.248 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 23:29:37.248 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578177248, current=DOWN, previous=UP]
2025-07-03 23:29:37.248 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:29:37.249 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:29:37.249 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:29:37.249 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7d726fa1] as "application/json"
2025-07-03 23:29:37.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:29:37.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:29:37.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:29:37.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 23:29:37.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:29:37.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:29:37.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 23:29:37.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 23:29:37.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 23:29:37.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 23:29:37.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 23:29:37.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 23:29:37.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 23:29:37.257 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:29:37.257 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:29:37.269 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:29:37.270 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 23:29:37.272 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 23:29:37.273 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 23:29:40.277 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 23:29:40.278 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:29:40.278 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:29:40.280 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:29:40.280 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:29:40.281 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:29:40.281 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:29:40.281 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:29:40.281 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:29:40.281 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:29:40.284 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-03 23:31:34.260 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Starting SubscriptionManagerApplicationKt using Java 21.0.6 with PID 44800 (/Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server/build/classes/kotlin/main started by ali.rezaiyan in /Users/ali.rezaiyan/AndroidStudioProjects/Subscription Manager/server)
2025-07-03 23:31:34.261 [main] DEBUG c.g.r.s.SubscriptionManagerApplicationKt - Running with Spring Boot v3.2.6, Spring v6.1.8
2025-07-03 23:31:34.261 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-07-03 23:31:34.608 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-03 23:31:34.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
2025-07-03 23:31:34.757 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=adbf1f4b-8acb-37b4-824c-6435b2499a2b
2025-07-03 23:31:34.877 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-03 23:31:34.879 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-03 23:31:34.985 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2025-07-03 23:31:34.989 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
2025-07-03 23:31:34.989 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-03 23:31:34.989 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-07-03 23:31:35.013 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-03 23:31:35.014 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 735 ms
2025-07-03 23:31:35.092 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-03 23:31:35.143 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-03 23:31:35.163 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2025-07-03 23:31:35.175 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-03 23:31:35.257 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-03 23:31:35.268 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-03 23:31:35.349 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4742466e
2025-07-03 23:31:35.350 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-03 23:31:35.375 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-03 23:31:35.650 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-03 23:31:35.692 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:31:35.935 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-03 23:31:36.121 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - No retry topic configuration found for topics [subscription-created]
2025-07-03 23:31:36.130 [main] DEBUG o.s.k.a.KafkaListenerAnnotationBeanPostProcessor - 1 @KafkaListener methods processed on bean 'kafkaEventListener': {public void com.github.rezaiyan.subscriptionmanager.KafkaEventListener.handleSubscriptionCreatedEvent(com.github.rezaiyan.subscriptionmanager.SubscriptionCreatedEvent)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="kafkaListenerContainerFactory", beanRef="__listener", contentTypeConverter="", topics={"subscription-created"}, groupId="subscription-manager-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", containerPostProcessor="", id="", properties={}, info="")]}
2025-07-03 23:31:36.170 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-03 23:31:36.213 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-07-03 23:31:36.262 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-03 23:31:36.279 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-03 23:31:36.295 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-03 23:31:36.460 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-03 23:31:36.485 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-03 23:31:36.488 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-03 23:31:36.531 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-03 23:31:36.568 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-03 23:31:36.570 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-07-03 23:31:36.579 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-07-03 23:31:36.648 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-07-03 23:31:36.687 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:31:36.706 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-03 23:31:36.707 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-07-03 23:31:36.715 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-07-03 23:31:36.716 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-07-03 23:31:36.717 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-03 23:31:36.718 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1751578296718 with initial instances count: 0
2025-07-03 23:31:36.721 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application SUBSCRIPTION-MANAGER with eureka with status UP
2025-07-03 23:31:36.721 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578296721, current=UP, previous=STARTING]
2025-07-03 23:31:36.721 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:31:36.721 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
2025-07-03 23:31:36.722 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:31:36.723 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:31:36.726 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path ''
2025-07-03 23:31:36.727 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 3000
2025-07-03 23:31:36.728 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = UP, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1db30771] as "application/json"
2025-07-03 23:31:36.735 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:31:36.735 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:31:36.748 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-subscription-manager-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = subscription-manager-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-07-03 23:31:36.750 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Initializing the Kafka consumer
2025-07-03 23:31:36.784 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2025-07-03 23:31:36.784 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2025-07-03 23:31:36.784 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1751578296783
2025-07-03 23:31:36.785 [main] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer initialized
2025-07-03 23:31:36.785 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Subscribed to topic(s): subscription-created
2025-07-03 23:31:36.788 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:31:36.795 [main] INFO  c.g.r.s.SubscriptionManagerApplicationKt - Started SubscriptionManagerApplicationKt in 2.692 seconds (process running for 2.889)
2025-07-03 23:31:36.797 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Starting data loader
2025-07-03 23:31:36.828 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.active,
        s1_0.amount,
        s1_0.created_at,
        s1_0.description,
        s1_0.frequency,
        s1_0.name,
        s1_0.next_billing_date,
        s1_0.start_date 
    from
        subscription s1_0
2025-07-03 23:31:36.838 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - No subscriptions with null frequency found
2025-07-03 23:31:36.838 [main] INFO  c.g.r.s.SubscriptionManagerApplication - SubscriptionManagerApplication - Data loading completed. New subscriptions should be created via the microservice.
2025-07-03 23:31:36.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:36.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:31:36.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:36.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:36.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:31:36.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:37.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:37.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:31:37.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:37.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:37.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:31:37.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:37.612 [http-nio-3000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-03 23:31:37.612 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@18b378a2
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@615c9e9b
2025-07-03 23:31:37.613 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-03 23:31:37.614 [http-nio-3000-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-03 23:31:37.619 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-07-03 23:31:37.627 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-07-03 23:31:37.637 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-03 23:31:37.655 [http-nio-3000-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@5df592a5]
2025-07-03 23:31:37.662 [http-nio-3000-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-03 23:31:37.733 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:37.733 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-03 23:31:37.733 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:38.455 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Node -1 disconnected.
2025-07-03 23:31:38.456 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Cancelled in-flight API_VERSIONS request with correlation id 1 due to node -1 being disconnected (elapsed time since creation: 9ms, elapsed time since send: 9ms, request timeout: 30000ms)
2025-07-03 23:31:38.456 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-07-03 23:31:38.765 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application SUBSCRIPTION-MANAGER with eureka with status DOWN
2025-07-03 23:31:38.766 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1751578298766, current=DOWN, previous=UP]
2025-07-03 23:31:38.766 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000: registering service...
2025-07-03 23:31:38.766 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER
2025-07-03 23:31:38.767 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:31:38.767 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = mac.fritz.box:subscription-manager:3000, appName = SUBSCRIPTION-MANAGER, hostName = 192.168.178.100, status = DOWN, ipAddr = 192.168.178.100, port = 3000, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1db30771] as "application/json"
2025-07-03 23:31:38.769 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - Commit list: {}
2025-07-03 23:31:38.769 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:31:38.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:31:38.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Unsubscribed all topics or patterns and assigned partitions
2025-07-03 23:31:38.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-07-03 23:31:38.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Request joining group due to: consumer pro-actively leaving the group
2025-07-03 23:31:38.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-03 23:31:38.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-03 23:31:38.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-03 23:31:38.773 [DiscoveryClient-InstanceInfoReplicator-0] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-07-03 23:31:38.773 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - registration status: 204
2025-07-03 23:31:38.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-subscription-manager-group-1 unregistered
2025-07-03 23:31:38.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-subscription-manager-group-1, groupId=subscription-manager-group] Kafka consumer has been closed
2025-07-03 23:31:38.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - subscription-manager-group: Consumer stopped
2025-07-03 23:31:38.775 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG o.s.k.l.KafkaMessageListenerContainer - KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-07-03 23:31:38.785 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-03 23:31:38.786 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-03 23:31:38.791 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-03 23:31:38.792 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-03 23:31:41.799 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-07-03 23:31:41.800 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:31:41.801 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:31:41.803 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:31:41.803 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:31:41.805 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - HTTP DELETE http://localhost:8761/eureka/apps/SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000
2025-07-03 23:31:41.805 [SpringApplicationShutdownHook] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-03 23:31:41.805 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-07-03 23:31:41.805 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-07-03 23:31:41.805 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_SUBSCRIPTION-MANAGER/mac.fritz.box:subscription-manager:3000 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-03 23:31:41.809 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
